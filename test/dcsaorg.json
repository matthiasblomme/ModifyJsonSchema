{
  "/v1/booking-summaries": {
    "get": {
      "responses": {
        "200": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.\n",
            "required": [
              "bookingRequestCreatedDateTime",
              "bookingRequestUpdatedDateTime",
              "cargoMovementTypeAtDestination",
              "cargoMovementTypeAtOrigin",
              "carrierBookingRequestReference",
              "communicationChannelCode",
              "deliveryTypeAtDestination",
              "documentStatus",
              "isEquipmentSubstitutionAllowed",
              "isExportDeclarationRequired",
              "isImportLicenseRequired",
              "isPartialLoadAllowed",
              "receiptTypeAtOrigin",
              "serviceContractReference"
            ],
            "properties": {
              "carrierBookingRequestReference": {
                "type": "string",
                "description": "A reference to the booking during the booking request phase\n"
              },
              "documentStatus": {
                "type": "string",
                "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
                "enum": [
                  "RECE",
                  "PENU",
                  "PENC",
                  "CONF",
                  "REJE",
                  "CANC",
                  "CMPL"
                ]
              },
              "bookingRequestCreatedDateTime": {
                "type": "string",
                "description": "The date and time when the booking request was created\n",
                "format": "date-time"
              },
              "bookingRequestUpdatedDateTime": {
                "type": "string",
                "description": "Last date and time when the booking request was updated\n",
                "format": "date-time"
              },
              "receiptTypeAtOrigin": {
                "maxLength": 3,
                "type": "string",
                "description": "Indicates the type of service offered at Origin. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
                "enum": [
                  "CY",
                  "SD",
                  "CFS"
                ]
              },
              "deliveryTypeAtDestination": {
                "maxLength": 3,
                "type": "string",
                "description": "Indicates the type of service offered at Destination. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
                "enum": [
                  "CY",
                  "SD",
                  "CFS"
                ]
              },
              "cargoMovementTypeAtOrigin": {
                "maxLength": 3,
                "type": "string",
                "description": "Refers to the shipment term at the loading of the cargo into the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
                "enum": [
                  "FCL",
                  "LCL",
                  "BB"
                ]
              },
              "cargoMovementTypeAtDestination": {
                "maxLength": 3,
                "type": "string",
                "description": "Refers to the shipment term at the unloading of the cargo out of the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
                "enum": [
                  "FCL",
                  "LCL",
                  "BB"
                ]
              },
              "serviceContractReference": {
                "maxLength": 30,
                "type": "string",
                "description": "Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule."
              },
              "vesselName": {
                "maxLength": 35,
                "type": "string",
                "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
              },
              "carrierExportVoyageNumber": {
                "maxLength": 50,
                "type": "string",
                "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
              },
              "universalExportVoyageReference": {
                "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                "type": "string",
                "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
              },
              "declaredValue": {
                "type": "number",
                "description": "The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.",
                "format": "float",
                "minimum": -3.402823669209385e+38,
                "maximum": 3.402823669209385e+38
              },
              "declaredValueCurrency": {
                "maxLength": 3,
                "type": "string",
                "description": "The currency used for the declared value, using the 3-character code defined by ISO 4217."
              },
              "paymentTermCode": {
                "type": "string",
                "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
                "enum": [
                  "PRE",
                  "COL"
                ]
              },
              "isPartialLoadAllowed": {
                "type": "boolean",
                "description": "Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off.\n"
              },
              "isExportDeclarationRequired": {
                "type": "boolean",
                "description": "Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination.\n"
              },
              "exportDeclarationReference": {
                "maxLength": 35,
                "type": "string",
                "description": "A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’.\n"
              },
              "isImportLicenseRequired": {
                "type": "boolean",
                "description": "Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination.\n"
              },
              "importLicenseReference": {
                "maxLength": 35,
                "type": "string",
                "description": "A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’.\n"
              },
              "isAMSACIFilingRequired": {
                "type": "boolean",
                "description": "Customs filing for US (AMS) or Canadian (ACI) customs\n"
              },
              "isDestinationFilingRequired": {
                "type": "boolean",
                "description": "Indicates whether the shipper will perform the AMS/ACI filing directly or not. Mandatory if AMS/ACI filing is required\n"
              },
              "contractQuotationReference": {
                "maxLength": 35,
                "type": "string",
                "description": "Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided.\n"
              },
              "expectedDepartureDate": {
                "type": "string",
                "description": "The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory\n",
                "format": "date"
              },
              "expectedArrivalAtPlaceOfDeliveryStartDate": {
                "type": "string",
                "description": "The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate`\n",
                "format": "date"
              },
              "expectedArrivalAtPlaceOfDeliveryEndDate": {
                "type": "string",
                "description": "The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate`\n",
                "format": "date"
              },
              "transportDocumentTypeCode": {
                "type": "string",
                "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
                "enum": [
                  "BOL",
                  "SWB"
                ]
              },
              "transportDocumentReference": {
                "maxLength": 20,
                "type": "string",
                "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
              },
              "bookingChannelReference": {
                "maxLength": 20,
                "type": "string",
                "description": "Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used\n"
              },
              "incoTerms": {
                "type": "string",
                "description": "Transport obligations, costs and risks as agreed between buyer and seller.\n- FCA (Free Carrier)\n- FOB (Free on Board)\n",
                "enum": [
                  "FCA",
                  "FOB"
                ]
              },
              "communicationChannelCode": {
                "maxLength": 2,
                "type": "string",
                "description": "Specifying which communication channel is to be used for this booking e.g.\n- EI (EDI transmission)\n- EM (Email)\n- AO (API)\n",
                "enum": [
                  "EI",
                  "EM",
                  "AO"
                ]
              },
              "isEquipmentSubstitutionAllowed": {
                "type": "boolean",
                "description": "Indicates if an alternate equipment type can be provided by the carrier.\n"
              },
              "vesselIMONumber": {
                "maxLength": 7,
                "type": "string",
                "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
              },
              "preCarriageModeOfTransportCode": {
                "type": "string",
                "description": "The mode of transport as defined by DCSA.\n",
                "enum": [
                  "VESSEL",
                  "RAIL",
                  "TRUCK",
                  "BARGE"
                ]
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  },
  "/v1/bookings": {
    "post": {
      "body": {
        "type": "object",
        "description": "includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.\n",
        "required": [
          "cargoMovementTypeAtDestination",
          "cargoMovementTypeAtOrigin",
          "commodities",
          "communicationChannelCode",
          "deliveryTypeAtDestination",
          "isEquipmentSubstitutionAllowed",
          "isExportDeclarationRequired",
          "isImportLicenseRequired",
          "isPartialLoadAllowed",
          "receiptTypeAtOrigin",
          "serviceContractReference"
        ],
        "properties": {
          "receiptTypeAtOrigin": {
            "maxLength": 3,
            "type": "string",
            "description": "Indicates the type of service offered at Origin. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
            "enum": [
              "CY",
              "SD",
              "CFS"
            ]
          },
          "deliveryTypeAtDestination": {
            "maxLength": 3,
            "type": "string",
            "description": "Indicates the type of service offered at Destination. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
            "enum": [
              "CY",
              "SD",
              "CFS"
            ]
          },
          "cargoMovementTypeAtOrigin": {
            "maxLength": 3,
            "type": "string",
            "description": "Refers to the shipment term at the loading of the cargo into the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
            "enum": [
              "FCL",
              "LCL",
              "BB"
            ]
          },
          "cargoMovementTypeAtDestination": {
            "maxLength": 3,
            "type": "string",
            "description": "Refers to the shipment term at the unloading of the cargo out of the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
            "enum": [
              "FCL",
              "LCL",
              "BB"
            ]
          },
          "serviceContractReference": {
            "maxLength": 30,
            "type": "string",
            "description": "Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule."
          },
          "vesselName": {
            "maxLength": 35,
            "type": "string",
            "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
          },
          "carrierExportVoyageNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
          },
          "universalExportVoyageReference": {
            "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
            "type": "string",
            "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
          },
          "declaredValue": {
            "type": "number",
            "description": "The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.",
            "format": "float",
            "minimum": -3.402823669209385e+38,
            "maximum": 3.402823669209385e+38
          },
          "declaredValueCurrency": {
            "maxLength": 3,
            "type": "string",
            "description": "The currency used for the declared value, using the 3-character code defined by ISO 4217."
          },
          "paymentTermCode": {
            "type": "string",
            "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
            "enum": [
              "PRE",
              "COL"
            ]
          },
          "isPartialLoadAllowed": {
            "type": "boolean",
            "description": "Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off.\n"
          },
          "isExportDeclarationRequired": {
            "type": "boolean",
            "description": "Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination.\n"
          },
          "exportDeclarationReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’.\n"
          },
          "isImportLicenseRequired": {
            "type": "boolean",
            "description": "Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination.\n"
          },
          "importLicenseReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’.\n"
          },
          "isAMSACIFilingRequired": {
            "type": "boolean",
            "description": "Customs filing for US (AMS) or Canadian (ACI) customs\n"
          },
          "isDestinationFilingRequired": {
            "type": "boolean",
            "description": "Indicates whether the shipper will perform the AMS/ACI filing directly or not. Mandatory if AMS/ACI filing is required\n"
          },
          "contractQuotationReference": {
            "maxLength": 35,
            "type": "string",
            "description": "Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided.\n"
          },
          "expectedDepartureDate": {
            "type": "string",
            "description": "The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory\n",
            "format": "date"
          },
          "expectedArrivalAtPlaceOfDeliveryStartDate": {
            "type": "string",
            "description": "The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate`\n",
            "format": "date"
          },
          "expectedArrivalAtPlaceOfDeliveryEndDate": {
            "type": "string",
            "description": "The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate`\n",
            "format": "date"
          },
          "transportDocumentTypeCode": {
            "type": "string",
            "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
            "enum": [
              "BOL",
              "SWB"
            ]
          },
          "transportDocumentReference": {
            "maxLength": 20,
            "type": "string",
            "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
          },
          "bookingChannelReference": {
            "maxLength": 20,
            "type": "string",
            "description": "Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used\n"
          },
          "incoTerms": {
            "type": "string",
            "description": "Transport obligations, costs and risks as agreed between buyer and seller.\n- FCA (Free Carrier)\n- FOB (Free on Board)\n",
            "enum": [
              "FCA",
              "FOB"
            ]
          },
          "communicationChannelCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Specifying which communication channel is to be used for this booking e.g.\n- EI (EDI transmission)\n- EM (Email)\n- AO (API)\n",
            "enum": [
              "EI",
              "EM",
              "AO"
            ]
          },
          "isEquipmentSubstitutionAllowed": {
            "type": "boolean",
            "description": "Indicates if an alternate equipment type can be provided by the carrier.\n"
          },
          "vesselIMONumber": {
            "maxLength": 7,
            "type": "string",
            "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
          },
          "preCarriageModeOfTransportCode": {
            "type": "string",
            "description": "The mode of transport as defined by DCSA.\n",
            "enum": [
              "VESSEL",
              "RAIL",
              "TRUCK",
              "BARGE"
            ]
          },
          "invoicePayableAt": {
            "anyOf": [
              {
                "required": [
                  "address"
                ],
                "type": "object",
                "description": "An interface used to express a location using an `Address` object\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "address": {
                    "description": "Address related information",
                    "type": "object",
                    "properties": {
                      "name": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the address"
                      },
                      "street": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "The name of the street of the party’s address."
                      },
                      "streetNumber": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The number of the street of the party’s address."
                      },
                      "floor": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The floor of the party’s street number."
                      },
                      "postCode": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The post code of the party’s address."
                      },
                      "city": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The city name of the party’s address."
                      },
                      "stateRegion": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The state/region of the party’s address."
                      },
                      "country": {
                        "maxLength": 75,
                        "type": "string",
                        "description": "The country of the party’s address."
                      }
                    }
                  }
                }
              },
              {
                "required": [
                  "UNLocationCode"
                ],
                "type": "object",
                "description": "An interface used to express a location using a `Un Location Code`\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "UNLocationCode": {
                    "maxLength": 5,
                    "type": "string",
                    "description": "The UN Location code specifying where the place is located."
                  }
                }
              }
            ],
            "description": "General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n"
          },
          "placeOfBLIssue": {
            "anyOf": [
              {
                "required": [
                  "address"
                ],
                "type": "object",
                "description": "An interface used to express a location using an `Address` object\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "address": {
                    "description": "Address related information",
                    "type": "object",
                    "properties": {
                      "name": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the address"
                      },
                      "street": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "The name of the street of the party’s address."
                      },
                      "streetNumber": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The number of the street of the party’s address."
                      },
                      "floor": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The floor of the party’s street number."
                      },
                      "postCode": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The post code of the party’s address."
                      },
                      "city": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The city name of the party’s address."
                      },
                      "stateRegion": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The state/region of the party’s address."
                      },
                      "country": {
                        "maxLength": 75,
                        "type": "string",
                        "description": "The country of the party’s address."
                      }
                    }
                  }
                }
              },
              {
                "required": [
                  "UNLocationCode"
                ],
                "type": "object",
                "description": "An interface used to express a location using a `Un Location Code`\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "UNLocationCode": {
                    "maxLength": 5,
                    "type": "string",
                    "description": "The UN Location code specifying where the place is located."
                  }
                }
              }
            ],
            "description": "General purpose object to capture `Place of B/L Issue` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n\nThe location where the original transport document (`Bill of Lading`) will be issued.\n"
          },
          "commodities": {
            "type": "array",
            "items": {
              "required": [
                "cargoGrossWeight",
                "cargoGrossWeightUnit",
                "commodityType"
              ],
              "type": "object",
              "description": "Type of goods in the booking, defined by its commodity type\n",
              "properties": {
                "commodityType": {
                  "maxLength": 550,
                  "type": "string",
                  "description": "High-level description of goods to be shipped which allow the carrier to confirm acceptance and commercial terms. To be replaced by \"description of goods\" upon submission of shipping instruction\n"
                },
                "HSCode": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Used by customs to classify the product being shipped."
                },
                "cargoGrossWeight": {
                  "type": "number",
                  "description": "The grand total weight of the cargo and weight per container(s) including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container(s).'\n",
                  "format": "float",
                  "minimum": -3.402823669209385e+38,
                  "maximum": 3.402823669209385e+38
                },
                "cargoGrossWeightUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in imperial or metric terms",
                  "enum": [
                    "KGM",
                    "LBR"
                  ]
                },
                "cargoGrossVolume": {
                  "type": "number",
                  "description": "The grand total volume of the commodity\n",
                  "format": "float",
                  "minimum": -3.402823669209385e+38,
                  "maximum": 3.402823669209385e+38
                },
                "cargoGrossVolumeUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in either imperial or metric terms\n- FTQ (Cubic meter)\n- MTQ (Cubic foot)\n",
                  "enum": [
                    "MTQ",
                    "FTQ"
                  ]
                },
                "numberOfPackages": {
                  "type": "integer",
                  "description": "Specifies the number of packages associated with this cargo item",
                  "format": "int32",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "exportLicenseIssueDate": {
                  "type": "string",
                  "description": "Issue date of the export license applicable to the booking. Mandatory to provide in booking request for specific commodities\n",
                  "format": "date"
                },
                "exportLicenseExpiryDate": {
                  "type": "string",
                  "description": "Expiry date of the export license applicable to the booking.\n\nMandatory to provide in booking request for specific commodities.\n",
                  "format": "date"
                }
              }
            }
          },
          "valueAddedServiceRequests": {
            "type": "array",
            "items": {
              "required": [
                "valueAddedServiceCode"
              ],
              "type": "object",
              "description": "Type of goods in the booking, defined by its commodity type\n",
              "properties": {
                "valueAddedServiceCode": {
                  "type": "string",
                  "description": "Code of the value added service\n- SCON (Smart containers)\n- CINS (Cargo insurance)\n- SIOT (Smart IoT devices)\n- CDECL (Customs declaration)\n- SGUAR (Shipping guarantee)\n- UPPY (Upfront payment)\n",
                  "enum": [
                    "SCON",
                    "CINS",
                    "SIOT",
                    "CDECL",
                    "SGUAR",
                    "UPPY"
                  ]
                }
              }
            }
          },
          "references": {
            "type": "array",
            "items": {
              "required": [
                "referenceType",
                "referenceValue"
              ],
              "type": "object",
              "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
              "properties": {
                "referenceType": {
                  "type": "string",
                  "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n- RUC (Registro Único del Contribuyente)\n- DUE (Declaração Única de Exportação)\n- CER (Canadian Export Reporting System)\n- AES (Automated Export System)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                  "enum": [
                    "FF",
                    "SI",
                    "PO",
                    "CR",
                    "AAO",
                    "ECR",
                    "CSI",
                    "BPR",
                    "BID",
                    "RUC",
                    "DUE",
                    "CER",
                    "AES"
                  ]
                },
                "referenceValue": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "The actual value of the reference."
                }
              }
            }
          },
          "requestedEquipments": {
            "type": "array",
            "items": {
              "required": [
                "isShipperOwned",
                "requestedEquipmentSizeType",
                "requestedEquipmentUnits"
              ],
              "type": "object",
              "description": "The requested equipments for the booking\n",
              "properties": {
                "requestedEquipmentSizeType": {
                  "maxLength": 4,
                  "type": "string",
                  "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
                },
                "requestedEquipmentUnits": {
                  "type": "integer",
                  "description": "Number of requested equipment units\n",
                  "format": "int32",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "equipmentReferences": {
                  "type": "array",
                  "items": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
                  }
                },
                "isShipperOwned": {
                  "type": "boolean",
                  "description": "Indicates whether the container is shipper owned (SOC)."
                }
              }
            }
          },
          "documentParties": {
            "type": "array",
            "items": {
              "required": [
                "isToBeNotified",
                "party",
                "partyFunction"
              ],
              "type": "object",
              "description": "stores the parties involved in the transport document.",
              "properties": {
                "party": {
                  "required": [
                    "partyContactDetails"
                  ],
                  "type": "object",
                  "description": "refers to a company or a legal entity.",
                  "properties": {
                    "partyName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Name of the party."
                    },
                    "taxReference1": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                    },
                    "taxReference2": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                    },
                    "publicKey": {
                      "maxLength": 500,
                      "type": "string",
                      "description": "The public key used for a digital signature."
                    },
                    "address": {
                      "type": "object",
                      "description": "An object for storing address related information\n",
                      "properties": {
                        "name": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "Name of the address"
                        },
                        "street": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the street of the party’s address."
                        },
                        "streetNumber": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The number of the street of the party’s address."
                        },
                        "floor": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The floor of the party’s street number."
                        },
                        "postCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The post code of the party’s address."
                        },
                        "city": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The city name of the party’s address."
                        },
                        "stateRegion": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The state/region of the party’s address."
                        },
                        "country": {
                          "maxLength": 75,
                          "type": "string",
                          "description": "The country of the party’s address."
                        }
                      }
                    },
                    "partyContactDetails": {
                      "minItems": 1,
                      "type": "array",
                      "description": "A list of contact details - the list cannot be empty\n",
                      "items": {
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "description": "Contact information for a Party\n",
                        "properties": {
                          "name": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Name of the contact"
                          },
                          "phone": {
                            "maxLength": 30,
                            "type": "string",
                            "description": "Phone number for the contact"
                          },
                          "email": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "E-mail address for the contact"
                          },
                          "url": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "URL for the contact"
                          }
                        }
                      }
                    },
                    "identifyingCodes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "DCSAResponsibleAgencyCode",
                          "partyCode"
                        ],
                        "type": "object",
                        "properties": {
                          "DCSAResponsibleAgencyCode": {
                            "type": "string",
                            "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- DID (Decentralized Identifier)\n- LEI (Legal Entity Identifier)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                            "enum": [
                              "ISO",
                              "UNECE",
                              "LLOYD",
                              "BIC",
                              "IMO",
                              "SCAC",
                              "ITIGG",
                              "ITU",
                              "SMDG",
                              "EXIS",
                              "FMC",
                              "CBSA",
                              "DCSA",
                              "DID",
                              "LEI",
                              "ZZZ"
                            ]
                          },
                          "partyCode": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Code to identify the party as provided by the agency\n"
                          },
                          "codeListName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the list, provided by the responsible agency\n"
                          }
                        }
                      }
                    }
                  }
                },
                "partyFunction": {
                  "type": "string",
                  "description": "Specifies the role of the party in the context of the given Shipping Instruction.\n- OS (Original shipper)\n- CN (Consignee)\n- COW (Invoice payer on behalf of the consignor (shipper))\n- COX (Invoice payer on behalf of the consignee)\n- MS (Document/message issuer/sender)\n- N1 (First Notify Party)\n- N2 (Second Notify Party)\n- NI (Other Notify Party)\n- DDR (Consignor's freight forwarder)\n- DDS (Consignee's freight forwarder)\n- HE (Carrier booking office (transportation office))\n- SCO (Service contract owner - Defined by DCSA)\n- BA (Booking Agency)\n- EBL (EBL Solution Provider)\n",
                  "enum": [
                    "OS",
                    "CN",
                    "COW",
                    "COX",
                    "MS",
                    "N1",
                    "N2",
                    "NI",
                    "DDR",
                    "DDS",
                    "HE",
                    "SCO",
                    "BA",
                    "EBL"
                  ]
                },
                "displayedAddress": {
                  "type": "array",
                  "items": {
                    "maxLength": 250,
                    "type": "string",
                    "description": "A single address line."
                  }
                },
                "isToBeNotified": {
                  "type": "boolean",
                  "description": "Used to decide whether the party will be notified of the arrival of the cargo."
                }
              }
            }
          },
          "shipmentLocations": {
            "type": "array",
            "items": {
              "required": [
                "location",
                "shipmentLocationTypeCode"
              ],
              "type": "object",
              "description": "maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`\n",
              "properties": {
                "location": {
                  "anyOf": [
                    {
                      "required": [
                        "address"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using an `Address` object\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "address": {
                          "description": "Address related information",
                          "type": "object",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the address"
                            },
                            "street": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the street of the party’s address."
                            },
                            "streetNumber": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The number of the street of the party’s address."
                            },
                            "floor": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The floor of the party’s street number."
                            },
                            "postCode": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The post code of the party’s address."
                            },
                            "city": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The city name of the party’s address."
                            },
                            "stateRegion": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The state/region of the party’s address."
                            },
                            "country": {
                              "maxLength": 75,
                              "type": "string",
                              "description": "The country of the party’s address."
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "UNLocationCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Un Location Code`\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        }
                      }
                    },
                    {
                      "required": [
                        "facilityCode",
                        "facilityCodeListProvider"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        },
                        "facilityCode": {
                          "maxLength": 6,
                          "type": "string",
                          "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                        },
                        "facilityCodeListProvider": {
                          "type": "string",
                          "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                          "enum": [
                            "BIC",
                            "SMDG"
                          ]
                        }
                      }
                    }
                  ],
                  "description": "General purpose object to capture the location in the `ShipmentLocation`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                },
                "displayedName": {
                  "maxLength": 250,
                  "type": "string",
                  "description": "The address of the Party to be displayed on the transport document."
                },
                "shipmentLocationTypeCode": {
                  "type": "string",
                  "description": "Links to the Location Type Code defined by DCSA.\n- PRE (Place of Receipt)\n- POL (Port of Loading)\n- POD (Port of Discharge)\n- PDE (Place of Delivery)\n- PCF (Pre-carriage From)\n- PSR (Pre-carriage under shipper’s responsibility)\n- OIR (Onward In-land Routing)\n- DRL (Depot release location)\n- ORI (Origin of goods)\n- IEL (Container intermediate export stop off location)\n- PTP (Prohibited transshipment port)\n- RTP (Requested transshipment port)\n- FCD (Full container drop-off location)\n- ECP (Empty container pick-up date and time)\n",
                  "enum": [
                    "PRE",
                    "POL",
                    "POD",
                    "PDE",
                    "PCF",
                    "PSR",
                    "OIR",
                    "DRL",
                    "ORI",
                    "IEL",
                    "PTP",
                    "RTP",
                    "FCD",
                    "ECP"
                  ]
                },
                "eventDateTime": {
                  "type": "string",
                  "description": "A date when the event is taking place at the location\n",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#"
      },
      "responses": {
        "201": {
          "required": [
            "bookingRequestCreatedDateTime",
            "bookingRequestUpdatedDateTime",
            "carrierBookingRequestReference",
            "documentStatus"
          ],
          "type": "object",
          "description": "The `carrierBookingRequestReference` along with the `documentStatus` is returned\n",
          "properties": {
            "carrierBookingRequestReference": {
              "type": "string",
              "description": "A reference to the booking during the booking request phase\n"
            },
            "documentStatus": {
              "type": "string",
              "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
              "enum": [
                "RECE",
                "PENU",
                "PENC",
                "CONF",
                "REJE",
                "CANC",
                "CMPL"
              ]
            },
            "bookingRequestCreatedDateTime": {
              "type": "string",
              "description": "The date and time when the booking request was created\n",
              "format": "date-time"
            },
            "bookingRequestUpdatedDateTime": {
              "type": "string",
              "description": "Last date and time when the booking request was updated\n",
              "format": "date-time"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  },
  "/v1/bookings/{carrierBookingRequestReference}": {
    "get": {
      "responses": {
        "200": {
          "type": "object",
          "description": "includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.\n",
          "required": [
            "bookingRequestCreatedDateTime",
            "bookingRequestUpdatedDateTime",
            "cargoMovementTypeAtDestination",
            "cargoMovementTypeAtOrigin",
            "carrierBookingRequestReference",
            "commodities",
            "communicationChannelCode",
            "deliveryTypeAtDestination",
            "documentStatus",
            "isEquipmentSubstitutionAllowed",
            "isExportDeclarationRequired",
            "isImportLicenseRequired",
            "isPartialLoadAllowed",
            "receiptTypeAtOrigin",
            "serviceContractReference"
          ],
          "properties": {
            "carrierBookingRequestReference": {
              "type": "string",
              "description": "A reference to the booking during the booking request phase\n"
            },
            "documentStatus": {
              "type": "string",
              "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
              "enum": [
                "RECE",
                "PENU",
                "PENC",
                "CONF",
                "REJE",
                "CANC",
                "CMPL"
              ]
            },
            "bookingRequestCreatedDateTime": {
              "type": "string",
              "description": "The date and time when the booking request was created\n",
              "format": "date-time"
            },
            "bookingRequestUpdatedDateTime": {
              "type": "string",
              "description": "Last date and time when the booking request was updated\n",
              "format": "date-time"
            },
            "receiptTypeAtOrigin": {
              "maxLength": 3,
              "type": "string",
              "description": "Indicates the type of service offered at Origin. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
              "enum": [
                "CY",
                "SD",
                "CFS"
              ]
            },
            "deliveryTypeAtDestination": {
              "maxLength": 3,
              "type": "string",
              "description": "Indicates the type of service offered at Destination. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
              "enum": [
                "CY",
                "SD",
                "CFS"
              ]
            },
            "cargoMovementTypeAtOrigin": {
              "maxLength": 3,
              "type": "string",
              "description": "Refers to the shipment term at the loading of the cargo into the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
              "enum": [
                "FCL",
                "LCL",
                "BB"
              ]
            },
            "cargoMovementTypeAtDestination": {
              "maxLength": 3,
              "type": "string",
              "description": "Refers to the shipment term at the unloading of the cargo out of the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
              "enum": [
                "FCL",
                "LCL",
                "BB"
              ]
            },
            "serviceContractReference": {
              "maxLength": 30,
              "type": "string",
              "description": "Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule."
            },
            "vesselName": {
              "maxLength": 35,
              "type": "string",
              "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
            },
            "carrierExportVoyageNumber": {
              "maxLength": 50,
              "type": "string",
              "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
            },
            "universalExportVoyageReference": {
              "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
              "type": "string",
              "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
            },
            "declaredValue": {
              "type": "number",
              "description": "The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.",
              "format": "float",
              "minimum": -3.402823669209385e+38,
              "maximum": 3.402823669209385e+38
            },
            "declaredValueCurrency": {
              "maxLength": 3,
              "type": "string",
              "description": "The currency used for the declared value, using the 3-character code defined by ISO 4217."
            },
            "paymentTermCode": {
              "type": "string",
              "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
              "enum": [
                "PRE",
                "COL"
              ]
            },
            "isPartialLoadAllowed": {
              "type": "boolean",
              "description": "Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off.\n"
            },
            "isExportDeclarationRequired": {
              "type": "boolean",
              "description": "Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination.\n"
            },
            "exportDeclarationReference": {
              "maxLength": 35,
              "type": "string",
              "description": "A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’.\n"
            },
            "isImportLicenseRequired": {
              "type": "boolean",
              "description": "Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination.\n"
            },
            "importLicenseReference": {
              "maxLength": 35,
              "type": "string",
              "description": "A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’.\n"
            },
            "isAMSACIFilingRequired": {
              "type": "boolean",
              "description": "Customs filing for US (AMS) or Canadian (ACI) customs\n"
            },
            "isDestinationFilingRequired": {
              "type": "boolean",
              "description": "Indicates whether the shipper will perform the AMS/ACI filing directly or not. Mandatory if AMS/ACI filing is required\n"
            },
            "contractQuotationReference": {
              "maxLength": 35,
              "type": "string",
              "description": "Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided.\n"
            },
            "expectedDepartureDate": {
              "type": "string",
              "description": "The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory\n",
              "format": "date"
            },
            "expectedArrivalAtPlaceOfDeliveryStartDate": {
              "type": "string",
              "description": "The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate`\n",
              "format": "date"
            },
            "expectedArrivalAtPlaceOfDeliveryEndDate": {
              "type": "string",
              "description": "The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate`\n",
              "format": "date"
            },
            "transportDocumentTypeCode": {
              "type": "string",
              "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
              "enum": [
                "BOL",
                "SWB"
              ]
            },
            "transportDocumentReference": {
              "maxLength": 20,
              "type": "string",
              "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
            },
            "bookingChannelReference": {
              "maxLength": 20,
              "type": "string",
              "description": "Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used\n"
            },
            "incoTerms": {
              "type": "string",
              "description": "Transport obligations, costs and risks as agreed between buyer and seller.\n- FCA (Free Carrier)\n- FOB (Free on Board)\n",
              "enum": [
                "FCA",
                "FOB"
              ]
            },
            "communicationChannelCode": {
              "maxLength": 2,
              "type": "string",
              "description": "Specifying which communication channel is to be used for this booking e.g.\n- EI (EDI transmission)\n- EM (Email)\n- AO (API)\n",
              "enum": [
                "EI",
                "EM",
                "AO"
              ]
            },
            "isEquipmentSubstitutionAllowed": {
              "type": "boolean",
              "description": "Indicates if an alternate equipment type can be provided by the carrier.\n"
            },
            "vesselIMONumber": {
              "maxLength": 7,
              "type": "string",
              "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
            },
            "preCarriageModeOfTransportCode": {
              "type": "string",
              "description": "The mode of transport as defined by DCSA.\n",
              "enum": [
                "VESSEL",
                "RAIL",
                "TRUCK",
                "BARGE"
              ]
            },
            "invoicePayableAt": {
              "anyOf": [
                {
                  "required": [
                    "address"
                  ],
                  "type": "object",
                  "description": "An interface used to express a location using an `Address` object\n",
                  "properties": {
                    "locationName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The name of the location."
                    },
                    "address": {
                      "description": "Address related information",
                      "type": "object",
                      "properties": {
                        "name": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "Name of the address"
                        },
                        "street": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the street of the party’s address."
                        },
                        "streetNumber": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The number of the street of the party’s address."
                        },
                        "floor": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The floor of the party’s street number."
                        },
                        "postCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The post code of the party’s address."
                        },
                        "city": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The city name of the party’s address."
                        },
                        "stateRegion": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The state/region of the party’s address."
                        },
                        "country": {
                          "maxLength": 75,
                          "type": "string",
                          "description": "The country of the party’s address."
                        }
                      }
                    }
                  }
                },
                {
                  "required": [
                    "UNLocationCode"
                  ],
                  "type": "object",
                  "description": "An interface used to express a location using a `Un Location Code`\n",
                  "properties": {
                    "locationName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The name of the location."
                    },
                    "UNLocationCode": {
                      "maxLength": 5,
                      "type": "string",
                      "description": "The UN Location code specifying where the place is located."
                    }
                  }
                }
              ],
              "description": "General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n"
            },
            "placeOfBLIssue": {
              "anyOf": [
                {
                  "required": [
                    "address"
                  ],
                  "type": "object",
                  "description": "An interface used to express a location using an `Address` object\n",
                  "properties": {
                    "locationName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The name of the location."
                    },
                    "address": {
                      "description": "Address related information",
                      "type": "object",
                      "properties": {
                        "name": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "Name of the address"
                        },
                        "street": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the street of the party’s address."
                        },
                        "streetNumber": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The number of the street of the party’s address."
                        },
                        "floor": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The floor of the party’s street number."
                        },
                        "postCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The post code of the party’s address."
                        },
                        "city": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The city name of the party’s address."
                        },
                        "stateRegion": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The state/region of the party’s address."
                        },
                        "country": {
                          "maxLength": 75,
                          "type": "string",
                          "description": "The country of the party’s address."
                        }
                      }
                    }
                  }
                },
                {
                  "required": [
                    "UNLocationCode"
                  ],
                  "type": "object",
                  "description": "An interface used to express a location using a `Un Location Code`\n",
                  "properties": {
                    "locationName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The name of the location."
                    },
                    "UNLocationCode": {
                      "maxLength": 5,
                      "type": "string",
                      "description": "The UN Location code specifying where the place is located."
                    }
                  }
                }
              ],
              "description": "General purpose object to capture `Place of B/L Issue` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n\nThe location where the original transport document (`Bill of Lading`) will be issued.\n"
            },
            "commodities": {
              "type": "array",
              "items": {
                "required": [
                  "cargoGrossWeight",
                  "cargoGrossWeightUnit",
                  "commodityType"
                ],
                "type": "object",
                "description": "Type of goods in the booking, defined by its commodity type\n",
                "properties": {
                  "commodityType": {
                    "maxLength": 550,
                    "type": "string",
                    "description": "High-level description of goods to be shipped which allow the carrier to confirm acceptance and commercial terms. To be replaced by \"description of goods\" upon submission of shipping instruction\n"
                  },
                  "HSCode": {
                    "maxLength": 10,
                    "type": "string",
                    "description": "Used by customs to classify the product being shipped."
                  },
                  "cargoGrossWeight": {
                    "type": "number",
                    "description": "The grand total weight of the cargo and weight per container(s) including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container(s).'\n",
                    "format": "float",
                    "minimum": -3.402823669209385e+38,
                    "maximum": 3.402823669209385e+38
                  },
                  "cargoGrossWeightUnit": {
                    "type": "string",
                    "description": "The unit of measure which can be expressed in imperial or metric terms",
                    "enum": [
                      "KGM",
                      "LBR"
                    ]
                  },
                  "cargoGrossVolume": {
                    "type": "number",
                    "description": "The grand total volume of the commodity\n",
                    "format": "float",
                    "minimum": -3.402823669209385e+38,
                    "maximum": 3.402823669209385e+38
                  },
                  "cargoGrossVolumeUnit": {
                    "type": "string",
                    "description": "The unit of measure which can be expressed in either imperial or metric terms\n- FTQ (Cubic meter)\n- MTQ (Cubic foot)\n",
                    "enum": [
                      "MTQ",
                      "FTQ"
                    ]
                  },
                  "numberOfPackages": {
                    "type": "integer",
                    "description": "Specifies the number of packages associated with this cargo item",
                    "format": "int32",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "exportLicenseIssueDate": {
                    "type": "string",
                    "description": "Issue date of the export license applicable to the booking. Mandatory to provide in booking request for specific commodities\n",
                    "format": "date"
                  },
                  "exportLicenseExpiryDate": {
                    "type": "string",
                    "description": "Expiry date of the export license applicable to the booking.\n\nMandatory to provide in booking request for specific commodities.\n",
                    "format": "date"
                  }
                }
              }
            },
            "valueAddedServiceRequests": {
              "type": "array",
              "items": {
                "required": [
                  "valueAddedServiceCode"
                ],
                "type": "object",
                "description": "Type of goods in the booking, defined by its commodity type\n",
                "properties": {
                  "valueAddedServiceCode": {
                    "type": "string",
                    "description": "Code of the value added service\n- SCON (Smart containers)\n- CINS (Cargo insurance)\n- SIOT (Smart IoT devices)\n- CDECL (Customs declaration)\n- SGUAR (Shipping guarantee)\n- UPPY (Upfront payment)\n",
                    "enum": [
                      "SCON",
                      "CINS",
                      "SIOT",
                      "CDECL",
                      "SGUAR",
                      "UPPY"
                    ]
                  }
                }
              }
            },
            "references": {
              "type": "array",
              "items": {
                "required": [
                  "referenceType",
                  "referenceValue"
                ],
                "type": "object",
                "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
                "properties": {
                  "referenceType": {
                    "type": "string",
                    "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n- RUC (Registro Único del Contribuyente)\n- DUE (Declaração Única de Exportação)\n- CER (Canadian Export Reporting System)\n- AES (Automated Export System)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                    "enum": [
                      "FF",
                      "SI",
                      "PO",
                      "CR",
                      "AAO",
                      "ECR",
                      "CSI",
                      "BPR",
                      "BID",
                      "RUC",
                      "DUE",
                      "CER",
                      "AES"
                    ]
                  },
                  "referenceValue": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The actual value of the reference."
                  }
                }
              }
            },
            "requestedEquipments": {
              "type": "array",
              "items": {
                "required": [
                  "isShipperOwned",
                  "requestedEquipmentSizeType",
                  "requestedEquipmentUnits"
                ],
                "type": "object",
                "description": "The requested equipments for the booking\n",
                "properties": {
                  "requestedEquipmentSizeType": {
                    "maxLength": 4,
                    "type": "string",
                    "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
                  },
                  "requestedEquipmentUnits": {
                    "type": "integer",
                    "description": "Number of requested equipment units\n",
                    "format": "int32",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "equipmentReferences": {
                    "type": "array",
                    "items": {
                      "maxLength": 15,
                      "type": "string",
                      "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
                    }
                  },
                  "isShipperOwned": {
                    "type": "boolean",
                    "description": "Indicates whether the container is shipper owned (SOC)."
                  }
                }
              }
            },
            "documentParties": {
              "type": "array",
              "items": {
                "required": [
                  "isToBeNotified",
                  "party",
                  "partyFunction"
                ],
                "type": "object",
                "description": "stores the parties involved in the transport document.",
                "properties": {
                  "party": {
                    "required": [
                      "partyContactDetails"
                    ],
                    "type": "object",
                    "description": "refers to a company or a legal entity.",
                    "properties": {
                      "partyName": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the party."
                      },
                      "taxReference1": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                      },
                      "taxReference2": {
                        "maxLength": 20,
                        "type": "string",
                        "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                      },
                      "publicKey": {
                        "maxLength": 500,
                        "type": "string",
                        "description": "The public key used for a digital signature."
                      },
                      "address": {
                        "type": "object",
                        "description": "An object for storing address related information\n",
                        "properties": {
                          "name": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Name of the address"
                          },
                          "street": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the street of the party’s address."
                          },
                          "streetNumber": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The number of the street of the party’s address."
                          },
                          "floor": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The floor of the party’s street number."
                          },
                          "postCode": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The post code of the party’s address."
                          },
                          "city": {
                            "maxLength": 65,
                            "type": "string",
                            "description": "The city name of the party’s address."
                          },
                          "stateRegion": {
                            "maxLength": 65,
                            "type": "string",
                            "description": "The state/region of the party’s address."
                          },
                          "country": {
                            "maxLength": 75,
                            "type": "string",
                            "description": "The country of the party’s address."
                          }
                        }
                      },
                      "partyContactDetails": {
                        "minItems": 1,
                        "type": "array",
                        "description": "A list of contact details - the list cannot be empty\n",
                        "items": {
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "description": "Contact information for a Party\n",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the contact"
                            },
                            "phone": {
                              "maxLength": 30,
                              "type": "string",
                              "description": "Phone number for the contact"
                            },
                            "email": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "E-mail address for the contact"
                            },
                            "url": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "URL for the contact"
                            }
                          }
                        }
                      },
                      "identifyingCodes": {
                        "type": "array",
                        "items": {
                          "required": [
                            "DCSAResponsibleAgencyCode",
                            "partyCode"
                          ],
                          "type": "object",
                          "properties": {
                            "DCSAResponsibleAgencyCode": {
                              "type": "string",
                              "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- DID (Decentralized Identifier)\n- LEI (Legal Entity Identifier)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                              "enum": [
                                "ISO",
                                "UNECE",
                                "LLOYD",
                                "BIC",
                                "IMO",
                                "SCAC",
                                "ITIGG",
                                "ITU",
                                "SMDG",
                                "EXIS",
                                "FMC",
                                "CBSA",
                                "DCSA",
                                "DID",
                                "LEI",
                                "ZZZ"
                              ]
                            },
                            "partyCode": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Code to identify the party as provided by the agency\n"
                            },
                            "codeListName": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the list, provided by the responsible agency\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "partyFunction": {
                    "type": "string",
                    "description": "Specifies the role of the party in the context of the given Shipping Instruction.\n- OS (Original shipper)\n- CN (Consignee)\n- COW (Invoice payer on behalf of the consignor (shipper))\n- COX (Invoice payer on behalf of the consignee)\n- MS (Document/message issuer/sender)\n- N1 (First Notify Party)\n- N2 (Second Notify Party)\n- NI (Other Notify Party)\n- DDR (Consignor's freight forwarder)\n- DDS (Consignee's freight forwarder)\n- HE (Carrier booking office (transportation office))\n- SCO (Service contract owner - Defined by DCSA)\n- BA (Booking Agency)\n- EBL (EBL Solution Provider)\n",
                    "enum": [
                      "OS",
                      "CN",
                      "COW",
                      "COX",
                      "MS",
                      "N1",
                      "N2",
                      "NI",
                      "DDR",
                      "DDS",
                      "HE",
                      "SCO",
                      "BA",
                      "EBL"
                    ]
                  },
                  "displayedAddress": {
                    "type": "array",
                    "items": {
                      "maxLength": 250,
                      "type": "string",
                      "description": "A single address line."
                    }
                  },
                  "isToBeNotified": {
                    "type": "boolean",
                    "description": "Used to decide whether the party will be notified of the arrival of the cargo."
                  }
                }
              }
            },
            "shipmentLocations": {
              "type": "array",
              "items": {
                "required": [
                  "location",
                  "shipmentLocationTypeCode"
                ],
                "type": "object",
                "description": "maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`\n",
                "properties": {
                  "location": {
                    "anyOf": [
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using an `Address` object\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "address": {
                            "description": "Address related information",
                            "type": "object",
                            "properties": {
                              "name": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "Name of the address"
                              },
                              "street": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the street of the party’s address."
                              },
                              "streetNumber": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The number of the street of the party’s address."
                              },
                              "floor": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The floor of the party’s street number."
                              },
                              "postCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The post code of the party’s address."
                              },
                              "city": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The city name of the party’s address."
                              },
                              "stateRegion": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The state/region of the party’s address."
                              },
                              "country": {
                                "maxLength": 75,
                                "type": "string",
                                "description": "The country of the party’s address."
                              }
                            }
                          }
                        }
                      },
                      {
                        "required": [
                          "UNLocationCode"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Un Location Code`\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          }
                        }
                      },
                      {
                        "required": [
                          "facilityCode",
                          "facilityCodeListProvider"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          },
                          "facilityCode": {
                            "maxLength": 6,
                            "type": "string",
                            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                          },
                          "facilityCodeListProvider": {
                            "type": "string",
                            "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                            "enum": [
                              "BIC",
                              "SMDG"
                            ]
                          }
                        }
                      }
                    ],
                    "description": "General purpose object to capture the location in the `ShipmentLocation`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                  },
                  "displayedName": {
                    "maxLength": 250,
                    "type": "string",
                    "description": "The address of the Party to be displayed on the transport document."
                  },
                  "shipmentLocationTypeCode": {
                    "type": "string",
                    "description": "Links to the Location Type Code defined by DCSA.\n- PRE (Place of Receipt)\n- POL (Port of Loading)\n- POD (Port of Discharge)\n- PDE (Place of Delivery)\n- PCF (Pre-carriage From)\n- PSR (Pre-carriage under shipper’s responsibility)\n- OIR (Onward In-land Routing)\n- DRL (Depot release location)\n- ORI (Origin of goods)\n- IEL (Container intermediate export stop off location)\n- PTP (Prohibited transshipment port)\n- RTP (Requested transshipment port)\n- FCD (Full container drop-off location)\n- ECP (Empty container pick-up date and time)\n",
                    "enum": [
                      "PRE",
                      "POL",
                      "POD",
                      "PDE",
                      "PCF",
                      "PSR",
                      "OIR",
                      "DRL",
                      "ORI",
                      "IEL",
                      "PTP",
                      "RTP",
                      "FCD",
                      "ECP"
                    ]
                  },
                  "eventDateTime": {
                    "type": "string",
                    "description": "A date when the event is taking place at the location\n",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    },
    "put": {
      "body": {
        "required": [
          "cargoMovementTypeAtDestination",
          "cargoMovementTypeAtOrigin",
          "carrierBookingRequestReference",
          "commodities",
          "communicationChannelCode",
          "deliveryTypeAtDestination",
          "isEquipmentSubstitutionAllowed",
          "isExportDeclarationRequired",
          "isImportLicenseRequired",
          "isPartialLoadAllowed",
          "receiptTypeAtOrigin",
          "serviceContractReference"
        ],
        "type": "object",
        "description": "includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.\n",
        "properties": {
          "carrierBookingRequestReference": {
            "type": "string",
            "description": "A reference to the booking during the booking request phase\n"
          },
          "receiptTypeAtOrigin": {
            "maxLength": 3,
            "type": "string",
            "description": "Indicates the type of service offered at Origin. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
            "enum": [
              "CY",
              "SD",
              "CFS"
            ]
          },
          "deliveryTypeAtDestination": {
            "maxLength": 3,
            "type": "string",
            "description": "Indicates the type of service offered at Destination. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
            "enum": [
              "CY",
              "SD",
              "CFS"
            ]
          },
          "cargoMovementTypeAtOrigin": {
            "maxLength": 3,
            "type": "string",
            "description": "Refers to the shipment term at the loading of the cargo into the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
            "enum": [
              "FCL",
              "LCL",
              "BB"
            ]
          },
          "cargoMovementTypeAtDestination": {
            "maxLength": 3,
            "type": "string",
            "description": "Refers to the shipment term at the unloading of the cargo out of the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
            "enum": [
              "FCL",
              "LCL",
              "BB"
            ]
          },
          "serviceContractReference": {
            "maxLength": 30,
            "type": "string",
            "description": "Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule."
          },
          "vesselName": {
            "maxLength": 35,
            "type": "string",
            "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
          },
          "carrierExportVoyageNumber": {
            "maxLength": 50,
            "type": "string",
            "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
          },
          "universalExportVoyageReference": {
            "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
            "type": "string",
            "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
          },
          "declaredValue": {
            "type": "number",
            "description": "The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.",
            "format": "float",
            "minimum": -3.402823669209385e+38,
            "maximum": 3.402823669209385e+38
          },
          "declaredValueCurrency": {
            "maxLength": 3,
            "type": "string",
            "description": "The currency used for the declared value, using the 3-character code defined by ISO 4217."
          },
          "paymentTermCode": {
            "type": "string",
            "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
            "enum": [
              "PRE",
              "COL"
            ]
          },
          "isPartialLoadAllowed": {
            "type": "boolean",
            "description": "Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off.\n"
          },
          "isExportDeclarationRequired": {
            "type": "boolean",
            "description": "Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination.\n"
          },
          "exportDeclarationReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’.\n"
          },
          "isImportLicenseRequired": {
            "type": "boolean",
            "description": "Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination.\n"
          },
          "importLicenseReference": {
            "maxLength": 35,
            "type": "string",
            "description": "A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’.\n"
          },
          "isAMSACIFilingRequired": {
            "type": "boolean",
            "description": "Customs filing for US (AMS) or Canadian (ACI) customs\n"
          },
          "isDestinationFilingRequired": {
            "type": "boolean",
            "description": "Indicates whether the shipper will perform the AMS/ACI filing directly or not. Mandatory if AMS/ACI filing is required\n"
          },
          "contractQuotationReference": {
            "maxLength": 35,
            "type": "string",
            "description": "Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided.\n"
          },
          "expectedDepartureDate": {
            "type": "string",
            "description": "The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory\n",
            "format": "date"
          },
          "expectedArrivalAtPlaceOfDeliveryStartDate": {
            "type": "string",
            "description": "The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate`\n",
            "format": "date"
          },
          "expectedArrivalAtPlaceOfDeliveryEndDate": {
            "type": "string",
            "description": "The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate`\n",
            "format": "date"
          },
          "transportDocumentTypeCode": {
            "type": "string",
            "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
            "enum": [
              "BOL",
              "SWB"
            ]
          },
          "transportDocumentReference": {
            "maxLength": 20,
            "type": "string",
            "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
          },
          "bookingChannelReference": {
            "maxLength": 20,
            "type": "string",
            "description": "Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used\n"
          },
          "incoTerms": {
            "type": "string",
            "description": "Transport obligations, costs and risks as agreed between buyer and seller.\n- FCA (Free Carrier)\n- FOB (Free on Board)\n",
            "enum": [
              "FCA",
              "FOB"
            ]
          },
          "communicationChannelCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Specifying which communication channel is to be used for this booking e.g.\n- EI (EDI transmission)\n- EM (Email)\n- AO (API)\n",
            "enum": [
              "EI",
              "EM",
              "AO"
            ]
          },
          "isEquipmentSubstitutionAllowed": {
            "type": "boolean",
            "description": "Indicates if an alternate equipment type can be provided by the carrier.\n"
          },
          "vesselIMONumber": {
            "maxLength": 7,
            "type": "string",
            "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
          },
          "preCarriageModeOfTransportCode": {
            "type": "string",
            "description": "The mode of transport as defined by DCSA.\n",
            "enum": [
              "VESSEL",
              "RAIL",
              "TRUCK",
              "BARGE"
            ]
          },
          "invoicePayableAt": {
            "anyOf": [
              {
                "required": [
                  "address"
                ],
                "type": "object",
                "description": "An interface used to express a location using an `Address` object\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "address": {
                    "description": "Address related information",
                    "type": "object",
                    "properties": {
                      "name": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the address"
                      },
                      "street": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "The name of the street of the party’s address."
                      },
                      "streetNumber": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The number of the street of the party’s address."
                      },
                      "floor": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The floor of the party’s street number."
                      },
                      "postCode": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The post code of the party’s address."
                      },
                      "city": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The city name of the party’s address."
                      },
                      "stateRegion": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The state/region of the party’s address."
                      },
                      "country": {
                        "maxLength": 75,
                        "type": "string",
                        "description": "The country of the party’s address."
                      }
                    }
                  }
                }
              },
              {
                "required": [
                  "UNLocationCode"
                ],
                "type": "object",
                "description": "An interface used to express a location using a `Un Location Code`\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "UNLocationCode": {
                    "maxLength": 5,
                    "type": "string",
                    "description": "The UN Location code specifying where the place is located."
                  }
                }
              }
            ],
            "description": "General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n"
          },
          "placeOfBLIssue": {
            "anyOf": [
              {
                "required": [
                  "address"
                ],
                "type": "object",
                "description": "An interface used to express a location using an `Address` object\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "address": {
                    "description": "Address related information",
                    "type": "object",
                    "properties": {
                      "name": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the address"
                      },
                      "street": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "The name of the street of the party’s address."
                      },
                      "streetNumber": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The number of the street of the party’s address."
                      },
                      "floor": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The floor of the party’s street number."
                      },
                      "postCode": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The post code of the party’s address."
                      },
                      "city": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The city name of the party’s address."
                      },
                      "stateRegion": {
                        "maxLength": 65,
                        "type": "string",
                        "description": "The state/region of the party’s address."
                      },
                      "country": {
                        "maxLength": 75,
                        "type": "string",
                        "description": "The country of the party’s address."
                      }
                    }
                  }
                }
              },
              {
                "required": [
                  "UNLocationCode"
                ],
                "type": "object",
                "description": "An interface used to express a location using a `Un Location Code`\n",
                "properties": {
                  "locationName": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "The name of the location."
                  },
                  "UNLocationCode": {
                    "maxLength": 5,
                    "type": "string",
                    "description": "The UN Location code specifying where the place is located."
                  }
                }
              }
            ],
            "description": "General purpose object to capture `Place of B/L Issue` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n\nThe location where the original transport document (`Bill of Lading`) will be issued.\n"
          },
          "commodities": {
            "type": "array",
            "items": {
              "required": [
                "cargoGrossWeight",
                "cargoGrossWeightUnit",
                "commodityType"
              ],
              "type": "object",
              "description": "Type of goods in the booking, defined by its commodity type\n",
              "properties": {
                "commodityType": {
                  "maxLength": 550,
                  "type": "string",
                  "description": "High-level description of goods to be shipped which allow the carrier to confirm acceptance and commercial terms. To be replaced by \"description of goods\" upon submission of shipping instruction\n"
                },
                "HSCode": {
                  "maxLength": 10,
                  "type": "string",
                  "description": "Used by customs to classify the product being shipped."
                },
                "cargoGrossWeight": {
                  "type": "number",
                  "description": "The grand total weight of the cargo and weight per container(s) including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container(s).'\n",
                  "format": "float",
                  "minimum": -3.402823669209385e+38,
                  "maximum": 3.402823669209385e+38
                },
                "cargoGrossWeightUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in imperial or metric terms",
                  "enum": [
                    "KGM",
                    "LBR"
                  ]
                },
                "cargoGrossVolume": {
                  "type": "number",
                  "description": "The grand total volume of the commodity\n",
                  "format": "float",
                  "minimum": -3.402823669209385e+38,
                  "maximum": 3.402823669209385e+38
                },
                "cargoGrossVolumeUnit": {
                  "type": "string",
                  "description": "The unit of measure which can be expressed in either imperial or metric terms\n- FTQ (Cubic meter)\n- MTQ (Cubic foot)\n",
                  "enum": [
                    "MTQ",
                    "FTQ"
                  ]
                },
                "numberOfPackages": {
                  "type": "integer",
                  "description": "Specifies the number of packages associated with this cargo item",
                  "format": "int32",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "exportLicenseIssueDate": {
                  "type": "string",
                  "description": "Issue date of the export license applicable to the booking. Mandatory to provide in booking request for specific commodities\n",
                  "format": "date"
                },
                "exportLicenseExpiryDate": {
                  "type": "string",
                  "description": "Expiry date of the export license applicable to the booking.\n\nMandatory to provide in booking request for specific commodities.\n",
                  "format": "date"
                }
              }
            }
          },
          "valueAddedServiceRequests": {
            "type": "array",
            "items": {
              "required": [
                "valueAddedServiceCode"
              ],
              "type": "object",
              "description": "Type of goods in the booking, defined by its commodity type\n",
              "properties": {
                "valueAddedServiceCode": {
                  "type": "string",
                  "description": "Code of the value added service\n- SCON (Smart containers)\n- CINS (Cargo insurance)\n- SIOT (Smart IoT devices)\n- CDECL (Customs declaration)\n- SGUAR (Shipping guarantee)\n- UPPY (Upfront payment)\n",
                  "enum": [
                    "SCON",
                    "CINS",
                    "SIOT",
                    "CDECL",
                    "SGUAR",
                    "UPPY"
                  ]
                }
              }
            }
          },
          "references": {
            "type": "array",
            "items": {
              "required": [
                "referenceType",
                "referenceValue"
              ],
              "type": "object",
              "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
              "properties": {
                "referenceType": {
                  "type": "string",
                  "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n- RUC (Registro Único del Contribuyente)\n- DUE (Declaração Única de Exportação)\n- CER (Canadian Export Reporting System)\n- AES (Automated Export System)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                  "enum": [
                    "FF",
                    "SI",
                    "PO",
                    "CR",
                    "AAO",
                    "ECR",
                    "CSI",
                    "BPR",
                    "BID",
                    "RUC",
                    "DUE",
                    "CER",
                    "AES"
                  ]
                },
                "referenceValue": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "The actual value of the reference."
                }
              }
            }
          },
          "requestedEquipments": {
            "type": "array",
            "items": {
              "required": [
                "isShipperOwned",
                "requestedEquipmentSizeType",
                "requestedEquipmentUnits"
              ],
              "type": "object",
              "description": "The requested equipments for the booking\n",
              "properties": {
                "requestedEquipmentSizeType": {
                  "maxLength": 4,
                  "type": "string",
                  "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
                },
                "requestedEquipmentUnits": {
                  "type": "integer",
                  "description": "Number of requested equipment units\n",
                  "format": "int32",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "equipmentReferences": {
                  "type": "array",
                  "items": {
                    "maxLength": 15,
                    "type": "string",
                    "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
                  }
                },
                "isShipperOwned": {
                  "type": "boolean",
                  "description": "Indicates whether the container is shipper owned (SOC)."
                }
              }
            }
          },
          "documentParties": {
            "type": "array",
            "items": {
              "required": [
                "isToBeNotified",
                "party",
                "partyFunction"
              ],
              "type": "object",
              "description": "stores the parties involved in the transport document.",
              "properties": {
                "party": {
                  "required": [
                    "partyContactDetails"
                  ],
                  "type": "object",
                  "description": "refers to a company or a legal entity.",
                  "properties": {
                    "partyName": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "Name of the party."
                    },
                    "taxReference1": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                    },
                    "taxReference2": {
                      "maxLength": 20,
                      "type": "string",
                      "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                    },
                    "publicKey": {
                      "maxLength": 500,
                      "type": "string",
                      "description": "The public key used for a digital signature."
                    },
                    "address": {
                      "type": "object",
                      "description": "An object for storing address related information\n",
                      "properties": {
                        "name": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "Name of the address"
                        },
                        "street": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the street of the party’s address."
                        },
                        "streetNumber": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The number of the street of the party’s address."
                        },
                        "floor": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The floor of the party’s street number."
                        },
                        "postCode": {
                          "maxLength": 50,
                          "type": "string",
                          "description": "The post code of the party’s address."
                        },
                        "city": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The city name of the party’s address."
                        },
                        "stateRegion": {
                          "maxLength": 65,
                          "type": "string",
                          "description": "The state/region of the party’s address."
                        },
                        "country": {
                          "maxLength": 75,
                          "type": "string",
                          "description": "The country of the party’s address."
                        }
                      }
                    },
                    "partyContactDetails": {
                      "minItems": 1,
                      "type": "array",
                      "description": "A list of contact details - the list cannot be empty\n",
                      "items": {
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "description": "Contact information for a Party\n",
                        "properties": {
                          "name": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Name of the contact"
                          },
                          "phone": {
                            "maxLength": 30,
                            "type": "string",
                            "description": "Phone number for the contact"
                          },
                          "email": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "E-mail address for the contact"
                          },
                          "url": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "URL for the contact"
                          }
                        }
                      }
                    },
                    "identifyingCodes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "DCSAResponsibleAgencyCode",
                          "partyCode"
                        ],
                        "type": "object",
                        "properties": {
                          "DCSAResponsibleAgencyCode": {
                            "type": "string",
                            "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- DID (Decentralized Identifier)\n- LEI (Legal Entity Identifier)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                            "enum": [
                              "ISO",
                              "UNECE",
                              "LLOYD",
                              "BIC",
                              "IMO",
                              "SCAC",
                              "ITIGG",
                              "ITU",
                              "SMDG",
                              "EXIS",
                              "FMC",
                              "CBSA",
                              "DCSA",
                              "DID",
                              "LEI",
                              "ZZZ"
                            ]
                          },
                          "partyCode": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Code to identify the party as provided by the agency\n"
                          },
                          "codeListName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the list, provided by the responsible agency\n"
                          }
                        }
                      }
                    }
                  }
                },
                "partyFunction": {
                  "type": "string",
                  "description": "Specifies the role of the party in the context of the given Shipping Instruction.\n- OS (Original shipper)\n- CN (Consignee)\n- COW (Invoice payer on behalf of the consignor (shipper))\n- COX (Invoice payer on behalf of the consignee)\n- MS (Document/message issuer/sender)\n- N1 (First Notify Party)\n- N2 (Second Notify Party)\n- NI (Other Notify Party)\n- DDR (Consignor's freight forwarder)\n- DDS (Consignee's freight forwarder)\n- HE (Carrier booking office (transportation office))\n- SCO (Service contract owner - Defined by DCSA)\n- BA (Booking Agency)\n- EBL (EBL Solution Provider)\n",
                  "enum": [
                    "OS",
                    "CN",
                    "COW",
                    "COX",
                    "MS",
                    "N1",
                    "N2",
                    "NI",
                    "DDR",
                    "DDS",
                    "HE",
                    "SCO",
                    "BA",
                    "EBL"
                  ]
                },
                "displayedAddress": {
                  "type": "array",
                  "items": {
                    "maxLength": 250,
                    "type": "string",
                    "description": "A single address line."
                  }
                },
                "isToBeNotified": {
                  "type": "boolean",
                  "description": "Used to decide whether the party will be notified of the arrival of the cargo."
                }
              }
            }
          },
          "shipmentLocations": {
            "type": "array",
            "items": {
              "required": [
                "location",
                "shipmentLocationTypeCode"
              ],
              "type": "object",
              "description": "maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`\n",
              "properties": {
                "location": {
                  "anyOf": [
                    {
                      "required": [
                        "address"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using an `Address` object\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "address": {
                          "description": "Address related information",
                          "type": "object",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the address"
                            },
                            "street": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the street of the party’s address."
                            },
                            "streetNumber": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The number of the street of the party’s address."
                            },
                            "floor": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The floor of the party’s street number."
                            },
                            "postCode": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The post code of the party’s address."
                            },
                            "city": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The city name of the party’s address."
                            },
                            "stateRegion": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The state/region of the party’s address."
                            },
                            "country": {
                              "maxLength": 75,
                              "type": "string",
                              "description": "The country of the party’s address."
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "UNLocationCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Un Location Code`\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        }
                      }
                    },
                    {
                      "required": [
                        "facilityCode",
                        "facilityCodeListProvider"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        },
                        "facilityCode": {
                          "maxLength": 6,
                          "type": "string",
                          "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                        },
                        "facilityCodeListProvider": {
                          "type": "string",
                          "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                          "enum": [
                            "BIC",
                            "SMDG"
                          ]
                        }
                      }
                    }
                  ],
                  "description": "General purpose object to capture the location in the `ShipmentLocation`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                },
                "displayedName": {
                  "maxLength": 250,
                  "type": "string",
                  "description": "The address of the Party to be displayed on the transport document."
                },
                "shipmentLocationTypeCode": {
                  "type": "string",
                  "description": "Links to the Location Type Code defined by DCSA.\n- PRE (Place of Receipt)\n- POL (Port of Loading)\n- POD (Port of Discharge)\n- PDE (Place of Delivery)\n- PCF (Pre-carriage From)\n- PSR (Pre-carriage under shipper’s responsibility)\n- OIR (Onward In-land Routing)\n- DRL (Depot release location)\n- ORI (Origin of goods)\n- IEL (Container intermediate export stop off location)\n- PTP (Prohibited transshipment port)\n- RTP (Requested transshipment port)\n- FCD (Full container drop-off location)\n- ECP (Empty container pick-up date and time)\n",
                  "enum": [
                    "PRE",
                    "POL",
                    "POD",
                    "PDE",
                    "PCF",
                    "PSR",
                    "OIR",
                    "DRL",
                    "ORI",
                    "IEL",
                    "PTP",
                    "RTP",
                    "FCD",
                    "ECP"
                  ]
                },
                "eventDateTime": {
                  "type": "string",
                  "description": "A date when the event is taking place at the location\n",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "$schema": "http://json-schema.org/draft-04/schema#"
      },
      "responses": {
        "200": {
          "required": [
            "bookingRequestCreatedDateTime",
            "bookingRequestUpdatedDateTime",
            "carrierBookingRequestReference",
            "documentStatus"
          ],
          "type": "object",
          "description": "The `carrierBookingRequestReference` along with the `documentStatus` is returned\n",
          "properties": {
            "carrierBookingRequestReference": {
              "type": "string",
              "description": "A reference to the booking during the booking request phase\n"
            },
            "documentStatus": {
              "type": "string",
              "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
              "enum": [
                "RECE",
                "PENU",
                "PENC",
                "CONF",
                "REJE",
                "CANC",
                "CMPL"
              ]
            },
            "bookingRequestCreatedDateTime": {
              "type": "string",
              "description": "The date and time when the booking request was created\n",
              "format": "date-time"
            },
            "bookingRequestUpdatedDateTime": {
              "type": "string",
              "description": "Last date and time when the booking request was updated\n",
              "format": "date-time"
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  },
  "/v1/shipment-summaries": {
    "get": {
      "responses": {
        "200": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Shipment 'metadata'\n",
            "required": [
              "carrierBookingReference",
              "shipmentCreatedDateTime"
            ],
            "properties": {
              "carrierBookingReference": {
                "maxLength": 35,
                "type": "string",
                "description": "A set of unique characters provided by carrier to identify a booking."
              },
              "shipmentCreatedDateTime": {
                "type": "string",
                "description": "The date and time when the shipment was created (equivalent to when the Booking was confirmed).\n",
                "format": "date-time"
              },
              "shipmentUpdatedDateTime": {
                "type": "string",
                "description": "Last date and time when the Shipment was updated.\n",
                "format": "date-time"
              },
              "termsAndConditions": {
                "type": "string",
                "description": "Carrier general terms and conditions for the booking.\n"
              },
              "carrierBookingRequestReference": {
                "type": "string",
                "description": "A reference to the booking during the booking request phase\n"
              },
              "documentStatus": {
                "type": "string",
                "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
                "enum": [
                  "RECE",
                  "PENU",
                  "PENC",
                  "CONF",
                  "REJE",
                  "CANC",
                  "CMPL"
                ]
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  },
  "/v1/shipments/{carrierBookingReference}": {
    "get": {
      "responses": {
        "200": {
          "required": [
            "booking",
            "carrierBookingReference",
            "shipmentCreatedDateTime",
            "transports"
          ],
          "type": "object",
          "description": "Shipment\n",
          "properties": {
            "carrierBookingReference": {
              "maxLength": 35,
              "type": "string",
              "description": "A set of unique characters provided by carrier to identify a booking."
            },
            "shipmentCreatedDateTime": {
              "type": "string",
              "description": "The date and time when the shipment was created (equivalent to when the Booking was confirmed).\n",
              "format": "date-time"
            },
            "shipmentUpdatedDateTime": {
              "type": "string",
              "description": "Last date and time when the Shipment was updated.\n",
              "format": "date-time"
            },
            "termsAndConditions": {
              "type": "string",
              "description": "Carrier general terms and conditions for the booking.\n"
            },
            "booking": {
              "type": "object",
              "description": "includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.\n",
              "required": [
                "bookingRequestCreatedDateTime",
                "bookingRequestUpdatedDateTime",
                "cargoMovementTypeAtDestination",
                "cargoMovementTypeAtOrigin",
                "carrierBookingRequestReference",
                "commodities",
                "communicationChannelCode",
                "deliveryTypeAtDestination",
                "documentStatus",
                "isEquipmentSubstitutionAllowed",
                "isExportDeclarationRequired",
                "isImportLicenseRequired",
                "isPartialLoadAllowed",
                "receiptTypeAtOrigin",
                "serviceContractReference"
              ],
              "properties": {
                "carrierBookingRequestReference": {
                  "type": "string",
                  "description": "A reference to the booking during the booking request phase\n"
                },
                "documentStatus": {
                  "type": "string",
                  "description": "The status of the booking. Possible values are:\n- RECE (Received)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- CANC (Cancelled)\n- CMPL (Completed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.\n",
                  "enum": [
                    "RECE",
                    "PENU",
                    "PENC",
                    "CONF",
                    "REJE",
                    "CANC",
                    "CMPL"
                  ]
                },
                "bookingRequestCreatedDateTime": {
                  "type": "string",
                  "description": "The date and time when the booking request was created\n",
                  "format": "date-time"
                },
                "bookingRequestUpdatedDateTime": {
                  "type": "string",
                  "description": "Last date and time when the booking request was updated\n",
                  "format": "date-time"
                },
                "receiptTypeAtOrigin": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Indicates the type of service offered at Origin. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
                  "enum": [
                    "CY",
                    "SD",
                    "CFS"
                  ]
                },
                "deliveryTypeAtDestination": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Indicates the type of service offered at Destination. Options are defined in the Receipt/Delivery entity.\n- CY (Container yard (incl. rail ramp))\n- SD (Store Door)\n- CFS (Container Freight Station)\n",
                  "enum": [
                    "CY",
                    "SD",
                    "CFS"
                  ]
                },
                "cargoMovementTypeAtOrigin": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Refers to the shipment term at the loading of the cargo into the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
                  "enum": [
                    "FCL",
                    "LCL",
                    "BB"
                  ]
                },
                "cargoMovementTypeAtDestination": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "Refers to the shipment term at the unloading of the cargo out of the container. Options are defined in the Cargo Movement Type entity.\n- FCL (Full Container Load)\n- LCL (Less than Container Load)\n- BB (Break Bulk)\n",
                  "enum": [
                    "FCL",
                    "LCL",
                    "BB"
                  ]
                },
                "serviceContractReference": {
                  "maxLength": 30,
                  "type": "string",
                  "description": "Reference number for agreement between shipper and carrier through which the shipper commits to provide a certain minimum quantity of cargo over a fixed period, and the carrier commits to a certain rate or rate schedule."
                },
                "vesselName": {
                  "maxLength": 35,
                  "type": "string",
                  "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
                },
                "carrierExportVoyageNumber": {
                  "maxLength": 50,
                  "type": "string",
                  "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
                },
                "universalExportVoyageReference": {
                  "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                  "type": "string",
                  "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
                },
                "declaredValue": {
                  "type": "number",
                  "description": "The value of the cargo that the shipper declares to avoid the carrier&apos;s limitation of liability and \"Ad Valorem\" freight, i.e. freight which is calculated based on the value of the goods declared by the shipper.",
                  "format": "float",
                  "minimum": -3.402823669209385e+38,
                  "maximum": 3.402823669209385e+38
                },
                "declaredValueCurrency": {
                  "maxLength": 3,
                  "type": "string",
                  "description": "The currency used for the declared value, using the 3-character code defined by ISO 4217."
                },
                "paymentTermCode": {
                  "type": "string",
                  "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
                  "enum": [
                    "PRE",
                    "COL"
                  ]
                },
                "isPartialLoadAllowed": {
                  "type": "boolean",
                  "description": "Indication whether the shipper agrees to load part of the shipment in case where not all of the cargo is delivered within cut-off.\n"
                },
                "isExportDeclarationRequired": {
                  "type": "boolean",
                  "description": "Information provided by the shipper whether an export declaration is required for this particular shipment/commodity/destination.\n"
                },
                "exportDeclarationReference": {
                  "maxLength": 35,
                  "type": "string",
                  "description": "A government document permitting designated goods to be shipped out of the country.  Reference number assigned by an issuing authority to an Export License. The export license must be valid at time of departure. Required if Export declaration required is ‘True’.\n"
                },
                "isImportLicenseRequired": {
                  "type": "boolean",
                  "description": "Information provided by the shipper whether an import permit or license is required for this particular shipment/commodity/destination.\n"
                },
                "importLicenseReference": {
                  "maxLength": 35,
                  "type": "string",
                  "description": "A certificate, issued by countries exercising import controls, that permits importation of the articles stated in the license. Reference number assigned by an issuing authority to an Import License. The import license number must be valid at time of arrival. Required if import license required is ‘True’.\n"
                },
                "isAMSACIFilingRequired": {
                  "type": "boolean",
                  "description": "Customs filing for US (AMS) or Canadian (ACI) customs\n"
                },
                "isDestinationFilingRequired": {
                  "type": "boolean",
                  "description": "Indicates whether the shipper will perform the AMS/ACI filing directly or not. Mandatory if AMS/ACI filing is required\n"
                },
                "contractQuotationReference": {
                  "maxLength": 35,
                  "type": "string",
                  "description": "Information provided by the shipper to identify whether pricing for the shipment has been agreed via a contract or a quotation reference. Mandatory if service contract (owner) is not provided.\n"
                },
                "expectedDepartureDate": {
                  "type": "string",
                  "description": "The date when the shipment is expected to be loaded on board a vessel as provided by the shipper or its agent. If vessel/voyage or expected date of arrival is not provided, this is mandatory\n",
                  "format": "date"
                },
                "expectedArrivalAtPlaceOfDeliveryStartDate": {
                  "type": "string",
                  "description": "The start date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryEndDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryEndDate`\n",
                  "format": "date"
                },
                "expectedArrivalAtPlaceOfDeliveryEndDate": {
                  "type": "string",
                  "description": "The end date (provided as a range together with `expectedArrivalAtPlaceOfDeliveryStartDate`) for when the shipment is expected to arrive at final destination. If vessel/voyage or `expectedDepartureDate` is not provided, this is mandatory together with `expectedArrivalAtPlaceOfDeliveryStartDate`\n",
                  "format": "date"
                },
                "transportDocumentTypeCode": {
                  "type": "string",
                  "description": "Specifies the type of the transport document\n- BOL (Bill of Lading)\n- SWB (Sea Waybill)\n",
                  "enum": [
                    "BOL",
                    "SWB"
                  ]
                },
                "transportDocumentReference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.\n"
                },
                "bookingChannelReference": {
                  "maxLength": 20,
                  "type": "string",
                  "description": "Identification number provided by the platform/channel used for booking request/confirmation, ex: Inttra booking reference, or GTNexus, other. Conditional on booking channel being used\n"
                },
                "incoTerms": {
                  "type": "string",
                  "description": "Transport obligations, costs and risks as agreed between buyer and seller.\n- FCA (Free Carrier)\n- FOB (Free on Board)\n",
                  "enum": [
                    "FCA",
                    "FOB"
                  ]
                },
                "communicationChannelCode": {
                  "maxLength": 2,
                  "type": "string",
                  "description": "Specifying which communication channel is to be used for this booking e.g.\n- EI (EDI transmission)\n- EM (Email)\n- AO (API)\n",
                  "enum": [
                    "EI",
                    "EM",
                    "AO"
                  ]
                },
                "isEquipmentSubstitutionAllowed": {
                  "type": "boolean",
                  "description": "Indicates if an alternate equipment type can be provided by the carrier.\n"
                },
                "vesselIMONumber": {
                  "maxLength": 7,
                  "type": "string",
                  "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
                },
                "preCarriageModeOfTransportCode": {
                  "type": "string",
                  "description": "The mode of transport as defined by DCSA.\n",
                  "enum": [
                    "VESSEL",
                    "RAIL",
                    "TRUCK",
                    "BARGE"
                  ]
                },
                "invoicePayableAt": {
                  "anyOf": [
                    {
                      "required": [
                        "address"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using an `Address` object\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "address": {
                          "description": "Address related information",
                          "type": "object",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the address"
                            },
                            "street": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the street of the party’s address."
                            },
                            "streetNumber": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The number of the street of the party’s address."
                            },
                            "floor": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The floor of the party’s street number."
                            },
                            "postCode": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The post code of the party’s address."
                            },
                            "city": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The city name of the party’s address."
                            },
                            "stateRegion": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The state/region of the party’s address."
                            },
                            "country": {
                              "maxLength": 75,
                              "type": "string",
                              "description": "The country of the party’s address."
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "UNLocationCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Un Location Code`\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        }
                      }
                    }
                  ],
                  "description": "General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n"
                },
                "placeOfBLIssue": {
                  "anyOf": [
                    {
                      "required": [
                        "address"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using an `Address` object\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "address": {
                          "description": "Address related information",
                          "type": "object",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the address"
                            },
                            "street": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the street of the party’s address."
                            },
                            "streetNumber": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The number of the street of the party’s address."
                            },
                            "floor": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The floor of the party’s street number."
                            },
                            "postCode": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The post code of the party’s address."
                            },
                            "city": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The city name of the party’s address."
                            },
                            "stateRegion": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The state/region of the party’s address."
                            },
                            "country": {
                              "maxLength": 75,
                              "type": "string",
                              "description": "The country of the party’s address."
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "UNLocationCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Un Location Code`\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        }
                      }
                    }
                  ],
                  "description": "General purpose object to capture `Place of B/L Issue` location. The location can be specified in **any** of the following ways: `UN Location Code` and/or an `Address`.\n\nThe location where the original transport document (`Bill of Lading`) will be issued.\n"
                },
                "commodities": {
                  "type": "array",
                  "items": {
                    "required": [
                      "cargoGrossWeight",
                      "cargoGrossWeightUnit",
                      "commodityType"
                    ],
                    "type": "object",
                    "description": "Type of goods in the booking, defined by its commodity type\n",
                    "properties": {
                      "commodityType": {
                        "maxLength": 550,
                        "type": "string",
                        "description": "High-level description of goods to be shipped which allow the carrier to confirm acceptance and commercial terms. To be replaced by \"description of goods\" upon submission of shipping instruction\n"
                      },
                      "HSCode": {
                        "maxLength": 10,
                        "type": "string",
                        "description": "Used by customs to classify the product being shipped."
                      },
                      "cargoGrossWeight": {
                        "type": "number",
                        "description": "The grand total weight of the cargo and weight per container(s) including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container(s).'\n",
                        "format": "float",
                        "minimum": -3.402823669209385e+38,
                        "maximum": 3.402823669209385e+38
                      },
                      "cargoGrossWeightUnit": {
                        "type": "string",
                        "description": "The unit of measure which can be expressed in imperial or metric terms",
                        "enum": [
                          "KGM",
                          "LBR"
                        ]
                      },
                      "cargoGrossVolume": {
                        "type": "number",
                        "description": "The grand total volume of the commodity\n",
                        "format": "float",
                        "minimum": -3.402823669209385e+38,
                        "maximum": 3.402823669209385e+38
                      },
                      "cargoGrossVolumeUnit": {
                        "type": "string",
                        "description": "The unit of measure which can be expressed in either imperial or metric terms\n- FTQ (Cubic meter)\n- MTQ (Cubic foot)\n",
                        "enum": [
                          "MTQ",
                          "FTQ"
                        ]
                      },
                      "numberOfPackages": {
                        "type": "integer",
                        "description": "Specifies the number of packages associated with this cargo item",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "exportLicenseIssueDate": {
                        "type": "string",
                        "description": "Issue date of the export license applicable to the booking. Mandatory to provide in booking request for specific commodities\n",
                        "format": "date"
                      },
                      "exportLicenseExpiryDate": {
                        "type": "string",
                        "description": "Expiry date of the export license applicable to the booking.\n\nMandatory to provide in booking request for specific commodities.\n",
                        "format": "date"
                      }
                    }
                  }
                },
                "valueAddedServiceRequests": {
                  "type": "array",
                  "items": {
                    "required": [
                      "valueAddedServiceCode"
                    ],
                    "type": "object",
                    "description": "Type of goods in the booking, defined by its commodity type\n",
                    "properties": {
                      "valueAddedServiceCode": {
                        "type": "string",
                        "description": "Code of the value added service\n- SCON (Smart containers)\n- CINS (Cargo insurance)\n- SIOT (Smart IoT devices)\n- CDECL (Customs declaration)\n- SGUAR (Shipping guarantee)\n- UPPY (Upfront payment)\n",
                        "enum": [
                          "SCON",
                          "CINS",
                          "SIOT",
                          "CDECL",
                          "SGUAR",
                          "UPPY"
                        ]
                      }
                    }
                  }
                },
                "references": {
                  "type": "array",
                  "items": {
                    "required": [
                      "referenceType",
                      "referenceValue"
                    ],
                    "type": "object",
                    "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
                    "properties": {
                      "referenceType": {
                        "type": "string",
                        "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n- RUC (Registro Único del Contribuyente)\n- DUE (Declaração Única de Exportação)\n- CER (Canadian Export Reporting System)\n- AES (Automated Export System)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                        "enum": [
                          "FF",
                          "SI",
                          "PO",
                          "CR",
                          "AAO",
                          "ECR",
                          "CSI",
                          "BPR",
                          "BID",
                          "RUC",
                          "DUE",
                          "CER",
                          "AES"
                        ]
                      },
                      "referenceValue": {
                        "maxLength": 100,
                        "type": "string",
                        "description": "The actual value of the reference."
                      }
                    }
                  }
                },
                "requestedEquipments": {
                  "type": "array",
                  "items": {
                    "required": [
                      "isShipperOwned",
                      "requestedEquipmentSizeType",
                      "requestedEquipmentUnits"
                    ],
                    "type": "object",
                    "description": "The requested equipments for the booking\n",
                    "properties": {
                      "requestedEquipmentSizeType": {
                        "maxLength": 4,
                        "type": "string",
                        "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
                      },
                      "requestedEquipmentUnits": {
                        "type": "integer",
                        "description": "Number of requested equipment units\n",
                        "format": "int32",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "equipmentReferences": {
                        "type": "array",
                        "items": {
                          "maxLength": 15,
                          "type": "string",
                          "description": "The unique identifier for the equipment, which should follow the BIC ISO Container Identification Number where possible.\nAccording to ISO 6346, a container identification code consists of a 4-letter prefix and a 7-digit number (composed of a 3-letter owner code, a category identifier, a serial number, and a check-digit). If a container does not comply with ISO 6346, it is suggested to follow Recommendation #2 “Container with non-ISO identification” from SMDG.\n"
                        }
                      },
                      "isShipperOwned": {
                        "type": "boolean",
                        "description": "Indicates whether the container is shipper owned (SOC)."
                      }
                    }
                  }
                },
                "documentParties": {
                  "type": "array",
                  "items": {
                    "required": [
                      "isToBeNotified",
                      "party",
                      "partyFunction"
                    ],
                    "type": "object",
                    "description": "stores the parties involved in the transport document.",
                    "properties": {
                      "party": {
                        "required": [
                          "partyContactDetails"
                        ],
                        "type": "object",
                        "description": "refers to a company or a legal entity.",
                        "properties": {
                          "partyName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "Name of the party."
                          },
                          "taxReference1": {
                            "maxLength": 20,
                            "type": "string",
                            "description": "The identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                          },
                          "taxReference2": {
                            "maxLength": 20,
                            "type": "string",
                            "description": "Optional second identifying number of the consignee or shipper (Individual or entity) used for tax purposes."
                          },
                          "publicKey": {
                            "maxLength": 500,
                            "type": "string",
                            "description": "The public key used for a digital signature."
                          },
                          "address": {
                            "type": "object",
                            "description": "An object for storing address related information\n",
                            "properties": {
                              "name": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "Name of the address"
                              },
                              "street": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the street of the party’s address."
                              },
                              "streetNumber": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The number of the street of the party’s address."
                              },
                              "floor": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The floor of the party’s street number."
                              },
                              "postCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The post code of the party’s address."
                              },
                              "city": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The city name of the party’s address."
                              },
                              "stateRegion": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The state/region of the party’s address."
                              },
                              "country": {
                                "maxLength": 75,
                                "type": "string",
                                "description": "The country of the party’s address."
                              }
                            }
                          },
                          "partyContactDetails": {
                            "minItems": 1,
                            "type": "array",
                            "description": "A list of contact details - the list cannot be empty\n",
                            "items": {
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "description": "Contact information for a Party\n",
                              "properties": {
                                "name": {
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Name of the contact"
                                },
                                "phone": {
                                  "maxLength": 30,
                                  "type": "string",
                                  "description": "Phone number for the contact"
                                },
                                "email": {
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "E-mail address for the contact"
                                },
                                "url": {
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "URL for the contact"
                                }
                              }
                            }
                          },
                          "identifyingCodes": {
                            "type": "array",
                            "items": {
                              "required": [
                                "DCSAResponsibleAgencyCode",
                                "partyCode"
                              ],
                              "type": "object",
                              "properties": {
                                "DCSAResponsibleAgencyCode": {
                                  "type": "string",
                                  "description": "A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:\n- ISO (International Standards Organization)\n- UNECE (United Nations Economic Commission for Europe)\n- LLOYD (Lloyd's register of shipping)\n- BIC (Bureau International des Containeurs)\n- IMO (International Maritime Organization)\n- SCAC (Standard Carrier Alpha Code)\n- ITIGG (International Transport Implementation Guidelines Group)\n- ITU (International Telecommunication Union)\n- SMDG (Shipplanning Message Development Group)\n- EXIS (Exis Technologies Ltd.)\n- FMC (Federal Maritime Commission)\n- CBSA (Canada Border Services Agency)\n- DCSA (Digital Container Shipping Association)\n- DID (Decentralized Identifier)\n- LEI (Legal Entity Identifier)\n- ZZZ (Mutually defined)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).\n",
                                  "enum": [
                                    "ISO",
                                    "UNECE",
                                    "LLOYD",
                                    "BIC",
                                    "IMO",
                                    "SCAC",
                                    "ITIGG",
                                    "ITU",
                                    "SMDG",
                                    "EXIS",
                                    "FMC",
                                    "CBSA",
                                    "DCSA",
                                    "DID",
                                    "LEI",
                                    "ZZZ"
                                  ]
                                },
                                "partyCode": {
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Code to identify the party as provided by the agency\n"
                                },
                                "codeListName": {
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "The name of the list, provided by the responsible agency\n"
                                }
                              }
                            }
                          }
                        }
                      },
                      "partyFunction": {
                        "type": "string",
                        "description": "Specifies the role of the party in the context of the given Shipping Instruction.\n- OS (Original shipper)\n- CN (Consignee)\n- COW (Invoice payer on behalf of the consignor (shipper))\n- COX (Invoice payer on behalf of the consignee)\n- MS (Document/message issuer/sender)\n- N1 (First Notify Party)\n- N2 (Second Notify Party)\n- NI (Other Notify Party)\n- DDR (Consignor's freight forwarder)\n- DDS (Consignee's freight forwarder)\n- HE (Carrier booking office (transportation office))\n- SCO (Service contract owner - Defined by DCSA)\n- BA (Booking Agency)\n- EBL (EBL Solution Provider)\n",
                        "enum": [
                          "OS",
                          "CN",
                          "COW",
                          "COX",
                          "MS",
                          "N1",
                          "N2",
                          "NI",
                          "DDR",
                          "DDS",
                          "HE",
                          "SCO",
                          "BA",
                          "EBL"
                        ]
                      },
                      "displayedAddress": {
                        "type": "array",
                        "items": {
                          "maxLength": 250,
                          "type": "string",
                          "description": "A single address line."
                        }
                      },
                      "isToBeNotified": {
                        "type": "boolean",
                        "description": "Used to decide whether the party will be notified of the arrival of the cargo."
                      }
                    }
                  }
                },
                "shipmentLocations": {
                  "type": "array",
                  "items": {
                    "required": [
                      "location",
                      "shipmentLocationTypeCode"
                    ],
                    "type": "object",
                    "description": "maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`\n",
                    "properties": {
                      "location": {
                        "anyOf": [
                          {
                            "required": [
                              "address"
                            ],
                            "type": "object",
                            "description": "An interface used to express a location using an `Address` object\n",
                            "properties": {
                              "locationName": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the location."
                              },
                              "address": {
                                "description": "Address related information",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "Name of the address"
                                  },
                                  "street": {
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The name of the street of the party’s address."
                                  },
                                  "streetNumber": {
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The number of the street of the party’s address."
                                  },
                                  "floor": {
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The floor of the party’s street number."
                                  },
                                  "postCode": {
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The post code of the party’s address."
                                  },
                                  "city": {
                                    "maxLength": 65,
                                    "type": "string",
                                    "description": "The city name of the party’s address."
                                  },
                                  "stateRegion": {
                                    "maxLength": 65,
                                    "type": "string",
                                    "description": "The state/region of the party’s address."
                                  },
                                  "country": {
                                    "maxLength": 75,
                                    "type": "string",
                                    "description": "The country of the party’s address."
                                  }
                                }
                              }
                            }
                          },
                          {
                            "required": [
                              "UNLocationCode"
                            ],
                            "type": "object",
                            "description": "An interface used to express a location using a `Un Location Code`\n",
                            "properties": {
                              "locationName": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the location."
                              },
                              "UNLocationCode": {
                                "maxLength": 5,
                                "type": "string",
                                "description": "The UN Location code specifying where the place is located."
                              }
                            }
                          },
                          {
                            "required": [
                              "facilityCode",
                              "facilityCodeListProvider"
                            ],
                            "type": "object",
                            "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                            "properties": {
                              "locationName": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the location."
                              },
                              "UNLocationCode": {
                                "maxLength": 5,
                                "type": "string",
                                "description": "The UN Location code specifying where the place is located."
                              },
                              "facilityCode": {
                                "maxLength": 6,
                                "type": "string",
                                "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                              },
                              "facilityCodeListProvider": {
                                "type": "string",
                                "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                                "enum": [
                                  "BIC",
                                  "SMDG"
                                ]
                              }
                            }
                          }
                        ],
                        "description": "General purpose object to capture the location in the `ShipmentLocation`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                      },
                      "displayedName": {
                        "maxLength": 250,
                        "type": "string",
                        "description": "The address of the Party to be displayed on the transport document."
                      },
                      "shipmentLocationTypeCode": {
                        "type": "string",
                        "description": "Links to the Location Type Code defined by DCSA.\n- PRE (Place of Receipt)\n- POL (Port of Loading)\n- POD (Port of Discharge)\n- PDE (Place of Delivery)\n- PCF (Pre-carriage From)\n- PSR (Pre-carriage under shipper’s responsibility)\n- OIR (Onward In-land Routing)\n- DRL (Depot release location)\n- ORI (Origin of goods)\n- IEL (Container intermediate export stop off location)\n- PTP (Prohibited transshipment port)\n- RTP (Requested transshipment port)\n- FCD (Full container drop-off location)\n- ECP (Empty container pick-up date and time)\n",
                        "enum": [
                          "PRE",
                          "POL",
                          "POD",
                          "PDE",
                          "PCF",
                          "PSR",
                          "OIR",
                          "DRL",
                          "ORI",
                          "IEL",
                          "PTP",
                          "RTP",
                          "FCD",
                          "ECP"
                        ]
                      },
                      "eventDateTime": {
                        "type": "string",
                        "description": "A date when the event is taking place at the location\n",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            },
            "transports": {
              "type": "array",
              "items": {
                "required": [
                  "dischargeLocation",
                  "loadLocation",
                  "plannedArrivalDate",
                  "plannedDepartureDate",
                  "transportPlanStage",
                  "transportPlanStageSequenceNumber"
                ],
                "type": "object",
                "description": "A list of transports sorted by ShipmentTransport sequenceNumber",
                "properties": {
                  "transportPlanStage": {
                    "type": "string",
                    "description": "Code qualifying a specific stage of transport e.g. pre-carriage, main carriage transport or on-carriage transport\n- PRC (Pre-Carriage)\n- MNC (Main Carriage Transport)\n- ONC (On-Carriage Transport)\n",
                    "enum": [
                      "PRC",
                      "MNC",
                      "ONC"
                    ]
                  },
                  "transportPlanStageSequenceNumber": {
                    "type": "integer",
                    "description": "Sequence number of the transport plan stage\n",
                    "format": "int32",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "loadLocation": {
                    "anyOf": [
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using an `Address` object\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "address": {
                            "description": "Address related information",
                            "type": "object",
                            "properties": {
                              "name": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "Name of the address"
                              },
                              "street": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the street of the party’s address."
                              },
                              "streetNumber": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The number of the street of the party’s address."
                              },
                              "floor": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The floor of the party’s street number."
                              },
                              "postCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The post code of the party’s address."
                              },
                              "city": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The city name of the party’s address."
                              },
                              "stateRegion": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The state/region of the party’s address."
                              },
                              "country": {
                                "maxLength": 75,
                                "type": "string",
                                "description": "The country of the party’s address."
                              }
                            }
                          }
                        }
                      },
                      {
                        "required": [
                          "UNLocationCode"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Un Location Code`\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          }
                        }
                      },
                      {
                        "required": [
                          "facilityCode",
                          "facilityCodeListProvider"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          },
                          "facilityCode": {
                            "maxLength": 6,
                            "type": "string",
                            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                          },
                          "facilityCodeListProvider": {
                            "type": "string",
                            "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                            "enum": [
                              "BIC",
                              "SMDG"
                            ]
                          }
                        }
                      }
                    ],
                    "description": "General purpose object to capture the `Load Location`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                  },
                  "dischargeLocation": {
                    "anyOf": [
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using an `Address` object\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "address": {
                            "description": "Address related information",
                            "type": "object",
                            "properties": {
                              "name": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "Name of the address"
                              },
                              "street": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the street of the party’s address."
                              },
                              "streetNumber": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The number of the street of the party’s address."
                              },
                              "floor": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The floor of the party’s street number."
                              },
                              "postCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The post code of the party’s address."
                              },
                              "city": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The city name of the party’s address."
                              },
                              "stateRegion": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The state/region of the party’s address."
                              },
                              "country": {
                                "maxLength": 75,
                                "type": "string",
                                "description": "The country of the party’s address."
                              }
                            }
                          }
                        }
                      },
                      {
                        "required": [
                          "UNLocationCode"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Un Location Code`\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          }
                        }
                      },
                      {
                        "required": [
                          "facilityCode",
                          "facilityCodeListProvider"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          },
                          "facilityCode": {
                            "maxLength": 6,
                            "type": "string",
                            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                          },
                          "facilityCodeListProvider": {
                            "type": "string",
                            "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                            "enum": [
                              "BIC",
                              "SMDG"
                            ]
                          }
                        }
                      }
                    ],
                    "description": "General purpose object to capture the `Discharge Location`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                  },
                  "plannedDepartureDate": {
                    "type": "string",
                    "description": "The planned date of departure.\n",
                    "format": "date"
                  },
                  "plannedArrivalDate": {
                    "type": "string",
                    "description": "The planned date of arrival.\n",
                    "format": "date"
                  },
                  "modeOfTransport": {
                    "type": "string",
                    "description": "The mode of transport as defined by DCSA.\n",
                    "enum": [
                      "VESSEL",
                      "RAIL",
                      "TRUCK",
                      "BARGE"
                    ]
                  },
                  "vesselName": {
                    "maxLength": 35,
                    "type": "string",
                    "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
                  },
                  "vesselIMONumber": {
                    "maxLength": 7,
                    "type": "string",
                    "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
                  },
                  "carrierImportVoyageNumber": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The identifier of an import voyage. The vessel operator-specific identifier of the import Voyage.\n"
                  },
                  "universalImportVoyageReference": {
                    "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                    "type": "string",
                    "description": "A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
                  },
                  "carrierExportVoyageNumber": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
                  },
                  "universalExportVoyageReference": {
                    "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                    "type": "string",
                    "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
                  },
                  "isUnderShippersResponsibility": {
                    "type": "boolean",
                    "description": "Indicator whether mode of transportation for pre-carriage (e.g. truck, barge, rail) is under shipper's responsibility\n"
                  }
                }
              }
            },
            "shipmentCutOffTimes": {
              "type": "array",
              "items": {
                "required": [
                  "cutOffDateTime",
                  "cutOffDateTimeCode"
                ],
                "type": "object",
                "description": "Cut off times\n",
                "properties": {
                  "cutOffDateTimeCode": {
                    "type": "string",
                    "description": "Code for the cut-off time\n- DCO (Documentation cut-off)\n- VCO (VGM cut-off)\n- FCO (FCL delivery cut-off)\n- LCO (LCL delivery cut-off)\n- ECP (Empty container pick-up date and time)\n- EFC (Earliest full-container delivery date)\n- AFD (AMS Filing Due date)\n",
                    "enum": [
                      "DCO",
                      "VCO",
                      "FCO",
                      "LCO",
                      "ECP",
                      "EFC",
                      "AFD"
                    ]
                  },
                  "cutOffDateTime": {
                    "type": "string",
                    "description": "Actual cut-off time\n",
                    "format": "date-time"
                  }
                }
              }
            },
            "shipmentLocations": {
              "type": "array",
              "items": {
                "required": [
                  "location",
                  "shipmentLocationTypeCode"
                ],
                "type": "object",
                "description": "maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`\n",
                "properties": {
                  "location": {
                    "anyOf": [
                      {
                        "required": [
                          "address"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using an `Address` object\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "address": {
                            "description": "Address related information",
                            "type": "object",
                            "properties": {
                              "name": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "Name of the address"
                              },
                              "street": {
                                "maxLength": 100,
                                "type": "string",
                                "description": "The name of the street of the party’s address."
                              },
                              "streetNumber": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The number of the street of the party’s address."
                              },
                              "floor": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The floor of the party’s street number."
                              },
                              "postCode": {
                                "maxLength": 50,
                                "type": "string",
                                "description": "The post code of the party’s address."
                              },
                              "city": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The city name of the party’s address."
                              },
                              "stateRegion": {
                                "maxLength": 65,
                                "type": "string",
                                "description": "The state/region of the party’s address."
                              },
                              "country": {
                                "maxLength": 75,
                                "type": "string",
                                "description": "The country of the party’s address."
                              }
                            }
                          }
                        }
                      },
                      {
                        "required": [
                          "UNLocationCode"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Un Location Code`\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          }
                        }
                      },
                      {
                        "required": [
                          "facilityCode",
                          "facilityCodeListProvider"
                        ],
                        "type": "object",
                        "description": "An interface used to express a location using a `Facility`. The facility can either be expressed using a `BIC` code or a `SMDG` code. The `facilityCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                        "properties": {
                          "locationName": {
                            "maxLength": 100,
                            "type": "string",
                            "description": "The name of the location."
                          },
                          "UNLocationCode": {
                            "maxLength": 5,
                            "type": "string",
                            "description": "The UN Location code specifying where the place is located."
                          },
                          "facilityCode": {
                            "maxLength": 6,
                            "type": "string",
                            "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                          },
                          "facilityCodeListProvider": {
                            "type": "string",
                            "description": "The provider used for identifying the facility Code. Some facility codes are only defined in combination with an `UN Location Code`\n- BIC (Requires a UN Location Code)\n- SMDG (Requires a UN Location Code)\n",
                            "enum": [
                              "BIC",
                              "SMDG"
                            ]
                          }
                        }
                      }
                    ],
                    "description": "General purpose object to capture the location in the `ShipmentLocation`. The location can be specified in **any** of the following ways: `UN Location Code`, `Facility` and/or an `Address`.\n"
                  },
                  "displayedName": {
                    "maxLength": 250,
                    "type": "string",
                    "description": "The address of the Party to be displayed on the transport document."
                  },
                  "shipmentLocationTypeCode": {
                    "type": "string",
                    "description": "Links to the Location Type Code defined by DCSA.\n- PRE (Place of Receipt)\n- POL (Port of Loading)\n- POD (Port of Discharge)\n- PDE (Place of Delivery)\n- PCF (Pre-carriage From)\n- PSR (Pre-carriage under shipper’s responsibility)\n- OIR (Onward In-land Routing)\n- DRL (Depot release location)\n- ORI (Origin of goods)\n- IEL (Container intermediate export stop off location)\n- PTP (Prohibited transshipment port)\n- RTP (Requested transshipment port)\n- FCD (Full container drop-off location)\n- ECP (Empty container pick-up date and time)\n",
                    "enum": [
                      "PRE",
                      "POL",
                      "POD",
                      "PDE",
                      "PCF",
                      "PSR",
                      "OIR",
                      "DRL",
                      "ORI",
                      "IEL",
                      "PTP",
                      "RTP",
                      "FCD",
                      "ECP"
                    ]
                  },
                  "eventDateTime": {
                    "type": "string",
                    "description": "A date when the event is taking place at the location\n",
                    "format": "date-time"
                  }
                }
              }
            },
            "confirmedEquipments": {
              "type": "array",
              "items": {
                "required": [
                  "confirmedEquipmentSizeType",
                  "confirmedEquipmentUnits"
                ],
                "type": "object",
                "description": "The confirmed equipments for the booking\n",
                "properties": {
                  "confirmedEquipmentSizeType": {
                    "maxLength": 4,
                    "type": "string",
                    "description": "Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard."
                  },
                  "confirmedEquipmentUnits": {
                    "type": "integer",
                    "description": "Number of confirmed equipment units\n",
                    "format": "int32",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  }
                }
              }
            },
            "charges": {
              "type": "array",
              "items": {
                "required": [
                  "calculationBasis",
                  "chargeType",
                  "currencyAmount",
                  "currencyCode",
                  "paymentTermCode",
                  "quantity",
                  "unitPrice"
                ],
                "type": "object",
                "description": "addresses the monetary value of freight and other service charges for a transport document.\n",
                "properties": {
                  "chargeType": {
                    "maxLength": 20,
                    "type": "string",
                    "description": "Free text field describing the charge type to apply\n"
                  },
                  "currencyAmount": {
                    "type": "number",
                    "description": "The monetary value of all freight and other service charges for a transport document, with a maximum of 2-digit decimals.",
                    "format": "float",
                    "minimum": -3.402823669209385e+38,
                    "maximum": 3.402823669209385e+38
                  },
                  "currencyCode": {
                    "maxLength": 3,
                    "type": "string",
                    "description": "The currency for the charge, using a 3-character code (ISO 4217)."
                  },
                  "paymentTermCode": {
                    "type": "string",
                    "description": "Indicates whether freight & charges are due for payment before the shipment is effected, practically before the transport document is released to shipper (Prepaid) or before the shipment is finalized meaning cargo released to consignee (Collect)\n- PRE (Prepaid)\n- COL (Collect)\n",
                    "enum": [
                      "PRE",
                      "COL"
                    ]
                  },
                  "calculationBasis": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The code specifying the measure unit used for the corresponding unit price for this cost, such as per day, per ton, per square metre."
                  },
                  "unitPrice": {
                    "type": "number",
                    "description": "The unit price of this charge item in the currency of the charge.",
                    "format": "float",
                    "minimum": -3.402823669209385e+38,
                    "maximum": 3.402823669209385e+38
                  },
                  "quantity": {
                    "type": "number",
                    "description": "The amount of unit for this charge item.",
                    "format": "float",
                    "minimum": -3.402823669209385e+38,
                    "maximum": 3.402823669209385e+38
                  }
                }
              }
            },
            "carrierClauses": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "comprises clauses, added by the carrier to the Transport Document, which are subject to local rules/guidelines or certain mandatory information required to be shared with the customer. Usually printed below the cargo description.\n",
                "properties": {
                  "clauseContent": {
                    "type": "string",
                    "description": "The content of the clause."
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  },
  "/v1/events/": {
    "get": {
      "responses": {
        "200": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "documentID",
              "documentTypeCode",
              "eventClassifierCode",
              "eventCreatedDateTime",
              "eventDateTime",
              "eventType",
              "shipmentEventTypeCode"
            ],
            "description": "The Event entity is described as a generalization of all the specific event categories. An event always takes place in relation to a shipment and can additionally be linked to a transport or an equipment\n",
            "properties": {
              "eventID": {
                "type": "string",
                "description": "The unique identifier for the event (the message - not the source).\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
                "format": "uuid"
              },
              "eventCreatedDateTime": {
                "type": "string",
                "description": "The timestamp of when the event was created.\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
                "format": "date-time"
              },
              "eventType": {
                "type": "string",
                "description": "The Event Type of the object - to be used as a discriminator.\n\n<b>NB</b>&#58; This field should be considered Metadata\n",
                "enum": [
                  "SHIPMENT"
                ]
              },
              "eventClassifierCode": {
                "type": "string",
                "description": "Code for the event classifier. Values can vary depending on eventType\n",
                "enum": [
                  "ACT"
                ]
              },
              "eventDateTime": {
                "type": "string",
                "description": "The local date and time, where the event took place or when the event will take place, in ISO 8601 format.",
                "format": "date-time"
              },
              "shipmentEventTypeCode": {
                "type": "string",
                "description": "The status of the document in the process. Possible values are\n- RECE (Received)\n- DRFT (Drafted)\n- PENA (Pending Approval)\n- PENU (Pending Update)\n- PENC (Pending Confirmation)\n- CONF (Confirmed)\n- REJE (Rejected)\n- APPR (Approved)\n- ISSU (Issued)\n- SURR (Surrendered)\n- SUBM (Submitted)\n- VOID (Void)\n- REQS (Requested)\n- CMPL (Completed)\n- HOLD (On Hold)\n- RELS (Released)\n- CANC (Cancelled)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv\">GitHub</a>\n",
                "enum": [
                  "RECE",
                  "DRFT",
                  "PENA",
                  "PENU",
                  "PENC",
                  "CONF",
                  "REJE",
                  "APPR",
                  "ISSU",
                  "SURR",
                  "SUBM",
                  "VOID",
                  "REQS",
                  "CMPL",
                  "HOLD",
                  "RELS",
                  "CANC"
                ]
              },
              "documentID": {
                "type": "string",
                "description": "The id of the object defined by the documentTypeCode.\n"
              },
              "documentTypeCode": {
                "maxLength": 3,
                "type": "string",
                "description": "The code to identify the type of information documentID points to. Can be one of the following values\n- CBR (Carrier Booking Request Reference)\n- BKG (Booking)\n- SHI (Shipping Instruction)\n- SRM (Shipment Release Message)\n- TRD (Transport Document)\n- ARN (Arrival Notice)\n- VGM (Verified Gross Mass)\n- CAS (Cargo Survey)\n- CUS (Customs Inspection)\n- DGD (Dangerous Goods Declaration)\n- OOG (Out of Gauge)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/documenttypecodes.csv\">GitHub</a>\n",
                "enum": [
                  "CBR",
                  "BKG",
                  "SHI",
                  "SRM",
                  "TRD",
                  "ARN",
                  "VGM",
                  "CAS",
                  "CUS",
                  "DGD",
                  "OOG"
                ]
              },
              "reason": {
                "maxLength": 250,
                "type": "string",
                "description": "Reason field in a Shipment event. This field can be used to explain why a specific event has been sent."
              },
              "documentReferences": {
                "type": "array",
                "description": "An optional list of key-value (`documentReferenceType`-`documentReferenceValue`) pairs representing links to objects relevant to the event. The `documentReferenceType`-field is used to describe where the `documentReferenceValue`-field is pointing to.\n",
                "items": {
                  "type": "object",
                  "properties": {
                    "documentReferenceType": {
                      "type": "string",
                      "description": "Describes where the documentReferenceValue is pointing to:\n- CBR (Carrier Booking Request Reference)\n- BKG (Carrier Booking Reference)\n- SHI (Shipping Instruction Reference)\n- TRD (Transport Document Reference)\n",
                      "enum": [
                        "CBR",
                        "BKG",
                        "SHI",
                        "TRD"
                      ]
                    },
                    "documentReferenceValue": {
                      "type": "string",
                      "description": "The value of the identifier the documentReferenceType is describing"
                    }
                  }
                }
              },
              "references": {
                "type": "array",
                "items": {
                  "required": [
                    "referenceType",
                    "referenceValue"
                  ],
                  "type": "object",
                  "description": "references provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.\n",
                  "properties": {
                    "referenceType": {
                      "type": "string",
                      "description": "The reference type codes defined by DCSA.\n- FF (Freight Forwarder’s Reference)\n- SI (Shipper’s Reference)\n- PO (Purchase Order Reference)\n- CR (Customer’s Reference)\n- AAO (Consignee’s Reference)\n- ECR (Empty container release reference)\n- CSI (Customer shipment ID)\n- BPR (Booking party reference number)\n- BID (Booking Request ID)\n- RUC (Registro Único del Contribuyente)\n- DUE (Declaração Única de Exportação)\n- CER (Canadian Export Reporting System)\n- AES (Automated Export System)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv\">GitHub</a>. Be aware that the list is a subset of the possible values.\n",
                      "enum": [
                        "FF",
                        "SI",
                        "PO",
                        "CR",
                        "AAO",
                        "ECR",
                        "CSI",
                        "BPR",
                        "BID",
                        "RUC",
                        "DUE",
                        "CER",
                        "AES"
                      ]
                    },
                    "referenceValue": {
                      "maxLength": 100,
                      "type": "string",
                      "description": "The actual value of the reference."
                    }
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        },
        "default": {
          "required": [
            "errorDateTime",
            "errors",
            "httpMethod",
            "requestUri",
            "statusCode",
            "statusCodeText"
          ],
          "type": "object",
          "properties": {
            "httpMethod": {
              "type": "string",
              "description": "The http request method type e.g. GET, POST\n",
              "enum": [
                "GET",
                "HEAD",
                "POST",
                "PUT",
                "DELETE",
                "OPTION",
                "PATCH"
              ]
            },
            "requestUri": {
              "type": "string",
              "description": "The request URI as it was sent\n",
              "format": "uri"
            },
            "statusCode": {
              "type": "integer",
              "description": "The HTTP status code\n",
              "format": "int32",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "statusCodeText": {
              "maxLength": 50,
              "type": "string",
              "description": "The textual representation of the status code\n"
            },
            "errorMessage": {
              "maxLength": 200,
              "type": "string",
              "description": "Other error information\n"
            },
            "providerCorrelationID": {
              "maxLength": 100,
              "type": "string",
              "description": "A unique identifier for the transaction, e.g. a UUID\n"
            },
            "errorDateTime": {
              "type": "string",
              "description": "The date and time (in ISO 8601 format) the error occurred.\n",
              "format": "date-time"
            },
            "errors": {
              "minItems": 1,
              "type": "array",
              "description": "List of detailed errors, e.g. fields that could not pass validation\n",
              "items": {
                "required": [
                  "message",
                  "reason"
                ],
                "type": "object",
                "properties": {
                  "errorCode": {
                    "maximum": 7999,
                    "minimum": 7000,
                    "type": "integer",
                    "description": "Standard error code see http://dcsa.org/error-codes (to be created). Examples: 7003 – out or range value, 7004 -  invalid type\n",
                    "format": "int32"
                  },
                  "field": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The field that caused the error, e.g. a failed validation\n"
                  },
                  "value": {
                    "maxLength": 500,
                    "type": "string",
                    "description": "The value that of the field that caused the error\n"
                  },
                  "reason": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "High level error message\n"
                  },
                  "message": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "Additional information as to why the error occured\n"
                  }
                }
              }
            }
          },
          "$schema": "http://json-schema.org/draft-04/schema#"
        }
      }
    }
  }
}
